{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js\";\n// GradientPieChart.js\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradientPieChart = ({\n  data,\n  title,\n  isStatusChart = false\n}) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n  const statusGradientColors = {\n    'Approved': ['#00FF00', '#00AA00'],\n    // Gradient green\n    'Unapproved': ['#FF0000', '#AA0000'],\n    // Gradient red\n    'Pending': ['#0000FF', '#0000AA'] // Gradient blue\n  };\n  const generateColors = () => {\n    if (isStatusChart) {\n      return labels.map(label => statusGradientColors[label] || ['#000000', '#000000']);\n    }\n    return undefined;\n  };\n  const options = {\n    chart: {\n      type: 'donut'\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent'\n        }\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: isStatusChart ? {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.5,\n        gradientToColors: generateColors().map(color => color[1]),\n        // To color\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100]\n      } : {\n        type: 'gradient',\n        shadeIntensity: 0.5,\n        gradientToColors: undefined,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100]\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      }\n    },\n    labels\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"donut\",\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = GradientPieChart;\nexport default GradientPieChart;\nvar _c;\n$RefreshReg$(_c, \"GradientPieChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","GradientPieChart","data","title","isStatusChart","series","map","item","value","labels","name","statusGradientColors","generateColors","label","undefined","options","chart","type","plotOptions","pie","startAngle","endAngle","donut","size","background","fill","gradient","shade","shadeIntensity","gradientToColors","color","inverseColors","opacityFrom","opacityTo","stops","dataLabels","enabled","legend","position","formatter","val","opts","w","globals","seriesIndex","className","children","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js"],"sourcesContent":["// GradientPieChart.js\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst GradientPieChart = ({ data, title, isStatusChart = false }) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n\n  const statusGradientColors = {\n    'Approved': ['#00FF00', '#00AA00'], // Gradient green\n    'Unapproved': ['#FF0000', '#AA0000'], // Gradient red\n    'Pending': ['#0000FF', '#0000AA'], // Gradient blue\n  };\n\n  const generateColors = () => {\n    if (isStatusChart) {\n      return labels.map(label => statusGradientColors[label] || ['#000000', '#000000']);\n    }\n    return undefined;\n  };\n\n  const options = {\n    chart: {\n      type: 'donut',\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent',\n        },\n      },\n    },\n    fill: {\n      type: 'gradient',\n      gradient: isStatusChart\n        ? {\n            shade: 'dark',\n            type: 'vertical',\n            shadeIntensity: 0.5,\n            gradientToColors: generateColors().map(color => color[1]), // To color\n            inverseColors: true,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100],\n          }\n        : {\n            type: 'gradient',\n            shadeIntensity: 0.5,\n            gradientToColors: undefined,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100],\n          },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      },\n    },\n    labels,\n  };\n\n  return (\n    <div className=\"chart\">\n      <ReactApexChart options={options} series={series} type=\"donut\" height={400} />\n    </div>\n  );\n};\n\nexport default GradientPieChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}