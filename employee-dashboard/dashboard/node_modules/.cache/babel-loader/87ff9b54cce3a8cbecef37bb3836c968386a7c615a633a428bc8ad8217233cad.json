{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from the APIs\n        const [employeeResponse, timesheetResponse] = await Promise.all([axios.get('http://localhost:5001/Employee_Data1'), axios.get('http://localhost:5001/timesheet')]);\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n\n        // Use a Set to store unique User_Id and project pairs\n        const uniquePairs = new Set();\n        timesheetData.forEach(entry => {\n          const pair = `${entry.User_Id}-${entry.project}`;\n          uniquePairs.add(pair);\n        });\n\n        // Log unique User_Id and project pairs\n        uniquePairs.forEach(pair => {\n          const [userId, project] = pair.split('-');\n          console.log(`User_Id: ${userId}, Project: ${project}`);\n        });\n\n        // Process employee data for display (if needed later)\n        const processedData = employeeData.map(employee => ({\n          name: employee.User_Fname + \" \" + employee.User_Lname || 'N/A',\n          email: employee.User_Email || 'N/A',\n          status: employee.User_Status || 'N/A'\n        }));\n        setEmployeesData(processedData);\n      } catch (error) {\n        setError('An error occurred while fetching employee data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployeeData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EmployeeTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loading && !error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employeesData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"55THOB/m7eZcGNdMGjyDf1FNpOg=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Overview","_s","employeesData","setEmployeesData","loading","setLoading","error","setError","fetchEmployeeData","employeeResponse","timesheetResponse","Promise","all","get","employeeData","data","timesheetData","uniquePairs","Set","forEach","entry","pair","User_Id","project","add","userId","split","console","log","processedData","map","employee","name","User_Fname","User_Lname","email","User_Email","status","User_Status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\n\nconst Overview = () => {\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from the APIs\n        const [employeeResponse, timesheetResponse] = await Promise.all([\n          axios.get('http://localhost:5001/Employee_Data1'),\n          axios.get('http://localhost:5001/timesheet'),\n        ]);\n\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n\n        // Use a Set to store unique User_Id and project pairs\n        const uniquePairs = new Set();\n\n        timesheetData.forEach((entry) => {\n          const pair = `${entry.User_Id}-${entry.project}`;\n          uniquePairs.add(pair);\n        });\n\n        // Log unique User_Id and project pairs\n        uniquePairs.forEach((pair) => {\n          const [userId, project] = pair.split('-');\n          console.log(`User_Id: ${userId}, Project: ${project}`);\n        });\n\n        // Process employee data for display (if needed later)\n        const processedData = employeeData.map((employee) => ({\n          name: employee.User_Fname + \" \" + employee.User_Lname || 'N/A',\n          email: employee.User_Email || 'N/A',\n          status: employee.User_Status || 'N/A',\n        }));\n\n        setEmployeesData(processedData);\n      } catch (error) {\n        setError('An error occurred while fetching employee data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEmployeeData();\n  }, []);\n\n  return (\n    <div className=\"Overview-container\">\n      <h1 className=\"title\">Employee Details</h1>\n      <div className=\"EmployeeTable\">\n        <h2>Employees Details</h2>\n        {loading && !error ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Employee Name</th>\n                <th>Email</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {employeesData.map((employee, index) => (\n                <tr key={index}>\n                  <td>{employee.name}</td>\n                  <td>{employee.email}</td>\n                  <td>{employee.status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}