{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport LineChart from './LineChart'; // Import the LineChart component\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [employees, setEmployees] = useState([]); // List of all employees with department\n  const [selectedEmployee, setSelectedEmployee] = useState(''); // Selected employee name\n  const [statusCounts, setStatusCounts] = useState({});\n  const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n  const [filterType, setFilterType] = useState('default');\n  const [filterValue, setFilterValue] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [lineChartData, setLineChartData] = useState([]);\n  const [breakLineChartData, setBreakLineChartData] = useState([]);\n  const [totalLineChartData, setTotalLineChartData] = useState([]);\n  const [totalBreakLineChartData, setTotalBreakLineChartData] = useState([]);\n  const convertToMinutes = time => {\n    const [hours, decimalMinutes] = time.split('.').map(Number);\n    const minutes = Math.round(decimalMinutes);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n        const uniqueEmployees = Array.from(new Set(csvData.map(item => `${item.emp_name}:${item.department}`))).map(emp => {\n          const [name, department] = emp.split(':');\n          return {\n            name,\n            department\n          };\n        });\n        setEmployees(uniqueEmployees);\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n        let filteredData = csvData;\n        if (selectedEmployee) {\n          filteredData = filteredData.filter(item => item.emp_name === selectedEmployee);\n        }\n        if (filterType === 'day') {\n          filteredData = filteredData.filter(item => item.date === filterValue);\n        } else if (filterType === 'week') {\n          filteredData = filteredData.filter(item => item.date >= startDate && item.date <= endDate);\n        } else if (filterType === 'month') {\n          filteredData = filteredData.filter(item => item.date.startsWith(filterValue));\n        }\n        const statusCounts = filteredData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n        let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n        let overflowMinutes = totalMinutes % 60;\n        let overflowHours = Math.floor(totalMinutes / 60);\n        setTotalTime(`${overflowHours} hours ${overflowMinutes} minutes`);\n        const lineChartData = filteredData.map(item => ({\n          date: item.date,\n          value: convertToMinutes(item.total_hrs)\n        }));\n        const breakLineChartData = filteredData.map(item => ({\n          date: item.date,\n          value: convertToMinutes(item.break)\n        }));\n        const totalLineChartData = filteredData.reduce((acc, item) => {\n          const month = item.date.substring(0, 7);\n          if (!acc[month]) {\n            acc[month] = 0;\n          }\n          acc[month] += convertToMinutes(item.total_hrs);\n          return acc;\n        }, {});\n        const totalBreakLineChartData = filteredData.reduce((acc, item) => {\n          const month = item.date.substring(0, 7);\n          if (!acc[month]) {\n            acc[month] = 0;\n          }\n          acc[month] += convertToMinutes(item.break);\n          return acc;\n        }, {});\n        setLineChartData(lineChartData);\n        setBreakLineChartData(breakLineChartData);\n        setTotalLineChartData(Object.entries(totalLineChartData).map(([month, value]) => ({\n          period: month,\n          value\n        })));\n        setTotalBreakLineChartData(Object.entries(totalBreakLineChartData).map(([month, value]) => ({\n          period: month,\n          value\n        })));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, [selectedEmployee, filterType, filterValue, startDate, endDate]);\n  const handleFilterChange = e => {\n    setFilterType(e.target.value);\n    setFilterValue(' '); // Reset filter value when changing type\n    setStartDate('');\n    setEndDate('');\n  };\n  const handleFilterValueChange = e => {\n    setFilterValue(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  const handleEmployeeChange = e => {\n    setSelectedEmployee(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEmployee,\n        onChange: handleEmployeeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: emp.name,\n          children: emp.name\n        }, emp.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), filterType === 'day' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterValue,\n        onChange: handleFilterValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), filterType === 'week' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), filterType === 'month' && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterValue,\n        onChange: handleFilterValueChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-01\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-02\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-03\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-04\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-05\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-06\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-07\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-08\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-09\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EmployeeTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"EmployeeCount\",\n        children: [\"Total Number of Employees: \", totalEmployees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TimeCount1\",\n        children: [\"Total Time: \", totalTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Status Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(statusCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Department Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(departmentCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monthly Total Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            totalData: totalLineChartData,\n            title: \"Total Time\",\n            xaxisTitle: \"Date\",\n            yaxisTitle: \"Total Time (Hours)\",\n            showTotalPoint: true,\n            isDefault: filterType === 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monthly Break Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            data: breakLineChartData,\n            totalData: totalBreakLineChartData,\n            title: \"Break Time\",\n            xaxisTitle: \"Date\",\n            yaxisTitle: \"Break Time (Hours)\",\n            showTotalPoint: true,\n            isDefault: filterType === 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(Overview, \"UJbH0sZtWkZnbyUTHm3h6+z8wSU=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","GradientPieChart","LineChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Overview","_s","totalEmployees","setTotalEmployees","departmentCounts","setDepartmentCounts","employees","setEmployees","selectedEmployee","setSelectedEmployee","statusCounts","setStatusCounts","totalTime","setTotalTime","filterType","setFilterType","filterValue","setFilterValue","startDate","setStartDate","endDate","setEndDate","lineChartData","setLineChartData","breakLineChartData","setBreakLineChartData","totalLineChartData","setTotalLineChartData","totalBreakLineChartData","setTotalBreakLineChartData","convertToMinutes","time","hours","decimalMinutes","split","map","Number","minutes","Math","round","fetchData","response","get","csvData","data","uniqueNames","Set","item","emp_name","size","uniqueEmployees","Array","from","department","emp","name","deptCounts","reduce","acc","add","departmentCountMap","Object","keys","filteredData","filter","date","startsWith","status","totalMinutes","total_hrs","overflowMinutes","overflowHours","floor","value","break","month","substring","entries","period","error","console","interval","setInterval","clearInterval","handleFilterChange","e","target","handleFilterValueChange","handleStartDateChange","handleEndDateChange","handleEmployeeChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","employee","index","key","totalData","title","xaxisTitle","yaxisTitle","showTotalPoint","isDefault","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport LineChart from './LineChart'; // Import the LineChart component\nimport './Overview.css';\n\nconst Overview = () => {\n    const [totalEmployees, setTotalEmployees] = useState(0);\n    const [departmentCounts, setDepartmentCounts] = useState({});\n    const [employees, setEmployees] = useState([]); // List of all employees with department\n    const [selectedEmployee, setSelectedEmployee] = useState(''); // Selected employee name\n    const [statusCounts, setStatusCounts] = useState({});\n    const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n    const [filterType, setFilterType] = useState('default');\n    const [filterValue, setFilterValue] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [lineChartData, setLineChartData] = useState([]);\n    const [breakLineChartData, setBreakLineChartData] = useState([]);\n    const [totalLineChartData, setTotalLineChartData] = useState([]);\n    const [totalBreakLineChartData, setTotalBreakLineChartData] = useState([]);\n\n    const convertToMinutes = (time) => {\n        const [hours, decimalMinutes] = time.split('.').map(Number);\n        const minutes = Math.round(decimalMinutes);\n        return (hours * 60) + minutes\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/data');\n                const csvData = response.data;\n\n                const uniqueNames = new Set(csvData.map(item => item.emp_name));\n                setTotalEmployees(uniqueNames.size);\n\n\n                const uniqueEmployees = Array.from(new Set(csvData.map(item => `${item.emp_name}:${item.department}`)))\n                    .map(emp => {\n                        const [name, department] = emp.split(':');\n                        return { name, department };\n                    });\n                setEmployees(uniqueEmployees);\n\n                const deptCounts = csvData.reduce((acc, item) => {\n                    if (!acc[item.department]) {\n                        acc[item.department] = new Set();\n                    }\n                    acc[item.department].add(item.emp_name);\n                    return acc;\n                }, {});\n                const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n                    acc[department] = deptCounts[department].size;\n                    return acc;\n                }, {});\n                setDepartmentCounts(departmentCountMap);\n\n                let filteredData = csvData;\n\n                if (selectedEmployee) {\n                    filteredData = filteredData.filter(item => item.emp_name === selectedEmployee);\n                }\n\n                if (filterType === 'day') {\n                    filteredData = filteredData.filter(item => item.date === filterValue);\n                } else if (filterType === 'week') {\n                    filteredData = filteredData.filter(item => item.date >= startDate && item.date <= endDate);\n                } else if (filterType === 'month') {\n                    filteredData = filteredData.filter(item => item.date.startsWith(filterValue));\n                }\n\n                const statusCounts = filteredData.reduce((acc, item) => {\n                    acc[item.status] = (acc[item.status] || 0) + 1;\n                    return acc;\n                }, {});\n                setStatusCounts(statusCounts);\n\n                let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n\n                let overflowMinutes = totalMinutes % 60;\n                let overflowHours = Math.floor(totalMinutes / 60);\n\n                setTotalTime(`${overflowHours} hours ${overflowMinutes} minutes`);\n\n                const lineChartData = filteredData.map(item => ({\n                    date: item.date,\n                    value: convertToMinutes(item.total_hrs)\n                }));\n\n                const breakLineChartData = filteredData.map(item => ({\n                    date: item.date,\n                    value: convertToMinutes(item.break)\n                }));\n\n                const totalLineChartData = filteredData.reduce((acc, item) => {\n                    const month = item.date.substring(0, 7);\n                    if (!acc[month]) {\n                        acc[month] = 0;\n                    }\n                    acc[month] += convertToMinutes(item.total_hrs);\n                    return acc;\n                }, {});\n\n                const totalBreakLineChartData = filteredData.reduce((acc, item) => {\n                    const month = item.date.substring(0, 7);\n                    if (!acc[month]) {\n                        acc[month] = 0;\n                    }\n                    acc[month] += convertToMinutes(item.break);\n                    return acc;\n                }, {});\n\n                setLineChartData(lineChartData);\n                setBreakLineChartData(breakLineChartData);\n                setTotalLineChartData(Object.entries(totalLineChartData).map(([month, value]) => ({ period: month, value })));\n                setTotalBreakLineChartData(Object.entries(totalBreakLineChartData).map(([month, value]) => ({ period: month, value })));\n\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 2000);\n\n        return () => clearInterval(interval);\n    }, [selectedEmployee, filterType, filterValue, startDate, endDate]);\n\n    const handleFilterChange = (e) => {\n        setFilterType(e.target.value);\n        setFilterValue(' '); // Reset filter value when changing type\n        setStartDate('');\n        setEndDate('');\n    };\n\n    const handleFilterValueChange = (e) => {\n        setFilterValue(e.target.value);\n    };\n\n    const handleStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    };\n\n    const handleEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    };\n\n    const handleEmployeeChange = (e) => {\n        setSelectedEmployee(e.target.value);\n    };\n\n    return (\n        <div className='Overview-container'>\n            <h1 className='title'>Employee Time Sheet</h1>\n            <div className='filter-container'>\n                <select value={selectedEmployee} onChange={handleEmployeeChange}>\n                    <option value=''>Select Employee</option>\n                    {employees.map(emp => (\n                        <option key={emp.name} value={emp.name}>{emp.name}</option>\n                    ))}\n                </select>\n                <select value={filterType} onChange={handleFilterChange}>\n                    <option value='default'>Default</option>\n                    <option value='day'>Day</option>\n                    <option value='week'>Week</option>\n                    {/* <option value='month'>Month</option> */}\n                </select>\n\n                {filterType === 'day' && (\n                    <input\n                        type='date'\n                        value={filterValue}\n                        onChange={handleFilterValueChange}\n                    />\n                )}\n\n                {filterType === 'week' && (\n                    <>\n                        <input\n                            type='date'\n                            value={startDate}\n                            onChange={handleStartDateChange}\n                        />\n                        <input\n                            type='date'\n                            value={endDate}\n                            onChange={handleEndDateChange}\n                        />\n                    </>\n                )}\n\n                {filterType === 'month' && (\n                    <select value={filterValue} onChange={handleFilterValueChange}>\n                        <option value='2024-01'>January</option>\n                        <option value='2024-02'>February</option>\n                        <option value='2024-03'>March</option>\n                        <option value='2024-04'>April</option>\n                        <option value='2024-05'>May</option>\n                        <option value='2024-06'>June</option>\n                        <option value='2024-07'>July</option>\n                        <option value='2024-08'>August</option>\n                        <option value='2024-09'>September</option>\n                        <option value='2024-10'>October</option>\n                        <option value='2024-11'>November</option>\n                        <option value='2024-12'>December</option>\n                    </select>\n                )}\n            </div>\n            \n            <div className='EmployeeTable'>\n                    <h2>Employees Details</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Employee Name</th>\n                                <th>Department</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map((employee, index) => (\n                                <tr key={index}>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.department}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n            </div>\n\n            <div className='counts-container'>\n                <p className='EmployeeCount'>Total Number of Employees: {totalEmployees}</p>\n                <p className='TimeCount1'>Total Time: {totalTime}</p>\n            </div>\n\n            <div className='final-container'>\n                <div className='chart-container'>\n                    <div className='chart1'>\n                        <h2>Status Breakdown</h2>\n                        <GradientPieChart\n                            data={Object.entries(statusCounts).map(([key, value]) => ({ name: key, value }))}\n                        />\n                    </div>\n                </div>\n\n                <div className='chart-container'>\n                    <div className='chart2'>\n                        <h2>Department Breakdown</h2>\n                        <GradientPieChart\n                            data={Object.entries(departmentCounts).map(([key, value]) => ({ name: key, value }))}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className='final-container1'>\n                <div className='chart-container1'>\n                    <div className='line-chart1'>\n                        <h2>Monthly Total Time</h2>\n                        <LineChart\n                            data={lineChartData}\n                            totalData={totalLineChartData}\n                            title=\"Total Time\"\n                            xaxisTitle=\"Date\"\n                            yaxisTitle=\"Total Time (Hours)\"\n                            showTotalPoint={true}\n                            isDefault={filterType === 'default'}\n                        />\n                    </div>\n                </div>\n\n                <div className='chart-container1'>\n                    <div className='line-chart2'>\n                        <h2>Monthly Break Time</h2>\n                        <LineChart\n                            data={breakLineChartData}\n                            totalData={totalBreakLineChartData}\n                            title=\"Break Time\"\n                            xaxisTitle=\"Date\"\n                            yaxisTitle=\"Break Time (Hours)\"\n                            showTotalPoint={true}\n                            isDefault={filterType === 'default'}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}