{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchField = () => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const provider = new OpenStreetMapProvider();\n    const searchControl = new GeoSearchControl({\n      provider,\n      style: 'bar',\n      showMarker: true,\n      retainZoomLevel: false,\n      animateZoom: true,\n      autoClose: true,\n      searchLabel: 'Enter address'\n    });\n    map.addControl(searchControl);\n    return () => map.removeControl(searchControl);\n  }, [map]);\n  return null;\n};\n_s(SearchField, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = SearchField;\nconst Location = () => {\n  _s2();\n  const [leavesData, setLeavesData] = useState([]);\n  const [geoData, setGeoData] = useState([]);\n  useEffect(() => {\n    const fetchLeavesData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched data:', data);\n        setLeavesData(data);\n      } catch (error) {\n        console.error('Error fetching leaves data:', error);\n      }\n    };\n    fetchLeavesData();\n  }, []);\n  useEffect(() => {\n    const geocodeLocation = async location => {\n      const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`;\n      for (let attempt = 1; attempt <= 3; attempt++) {\n        try {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const result = await response.json();\n          if (result.length > 0) {\n            const {\n              lat,\n              lon\n            } = result[0];\n            return {\n              lat,\n              lon\n            };\n          }\n          break;\n        } catch (error) {\n          console.error(`Error geocoding ${location} (attempt ${attempt}):`, error);\n          if (attempt === 3) {\n            return null;\n          }\n        }\n      }\n    };\n    const geocodeLocations = async () => {\n      const geocodedData = await Promise.all(leavesData.map(async item => {\n        const geocodeResult = await geocodeLocation(item.location);\n        if (geocodeResult) {\n          return {\n            ...item,\n            lat: geocodeResult.lat,\n            lon: geocodeResult.lon\n          };\n        }\n        return null;\n      }));\n      setGeoData(geocodedData.filter(item => item !== null));\n    };\n    if (leavesData.length > 0) {\n      geocodeLocations();\n    }\n  }, [leavesData]);\n  const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultCenter,\n      zoom: 13,\n      style: {\n        height: \"100vh\",\n        width: \"88%\",\n        position: \"absolute\",\n        left: \"13.5%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), geoData.map((location, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.lat, location.lon],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [location.location, \": \", location.emp_name, \" - \", location.leaves, \" leaves\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s2(Location, \"2jObyz0QFc/9dDpSbULSYHvavi8=\");\n_c2 = Location;\nexport default Location;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchField\");\n$RefreshReg$(_c2, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","GeoSearchControl","OpenStreetMapProvider","jsxDEV","_jsxDEV","SearchField","_s","map","provider","searchControl","style","showMarker","retainZoomLevel","animateZoom","autoClose","searchLabel","addControl","removeControl","_c","Location","_s2","leavesData","setLeavesData","geoData","setGeoData","fetchLeavesData","response","fetch","ok","Error","status","data","json","console","log","error","geocodeLocation","location","url","encodeURIComponent","attempt","result","length","lat","lon","geocodeLocations","geocodedData","Promise","all","item","geocodeResult","filter","defaultCenter","children","center","zoom","height","width","position","left","attribution","fileName","_jsxFileName","lineNumber","columnNumber","idx","emp_name","leaves","_c2","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css';\n\nconst SearchField = () => {\n    const map = useMap();\n\n    useEffect(() => {\n        const provider = new OpenStreetMapProvider();\n\n        const searchControl = new GeoSearchControl({\n            provider,\n            style: 'bar',\n            showMarker: true,\n            retainZoomLevel: false,\n            animateZoom: true,\n            autoClose: true,\n            searchLabel: 'Enter address'\n        });\n\n        map.addControl(searchControl);\n        return () => map.removeControl(searchControl);\n    }, [map]);\n\n    return null;\n};\n\nconst Location = () => {\n    const [leavesData, setLeavesData] = useState([]);\n    const [geoData, setGeoData] = useState([]);\n\n    useEffect(() => {\n        const fetchLeavesData = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/data');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                console.log('Fetched data:', data);\n                setLeavesData(data);\n            } catch (error) {\n                console.error('Error fetching leaves data:', error);\n            }\n        };\n\n        fetchLeavesData();\n    }, []);\n\n    useEffect(() => {\n        const geocodeLocation = async (location) => {\n            const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`;\n            for (let attempt = 1; attempt <= 3; attempt++) {\n                try {\n                    const response = await fetch(url);\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    const result = await response.json();\n                    if (result.length > 0) {\n                        const { lat, lon } = result[0];\n                        return { lat, lon };\n                    }\n                    break;\n                } catch (error) {\n                    console.error(`Error geocoding ${location} (attempt ${attempt}):`, error);\n                    if (attempt === 3) {\n                        return null;\n                    }\n                }\n            }\n        };\n\n        const geocodeLocations = async () => {\n            const geocodedData = await Promise.all(leavesData.map(async (item) => {\n                const geocodeResult = await geocodeLocation(item.location);\n                if (geocodeResult) {\n                    return {\n                        ...item,\n                        lat: geocodeResult.lat,\n                        lon: geocodeResult.lon\n                    };\n                }\n                return null;\n            }));\n\n            setGeoData(geocodedData.filter(item => item !== null));\n        };\n\n        if (leavesData.length > 0) {\n            geocodeLocations();\n        }\n    }, [leavesData]);\n\n    const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n    return (\n        <div>\n            <MapContainer center={defaultCenter} zoom={13} style={{ height: \"100vh\", width: \"88%\", position: \"absolute\", left: \"13.5%\" }}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                <SearchField />\n                {geoData.map((location, idx) => (\n                    <Marker key={idx} position={[location.lat, location.lon]}>\n                        <Popup>\n                            {location.location}: {location.emp_name} - {location.leaves} leaves\n                        </Popup>\n                    </Marker>\n                ))}\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default Location;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAC9E,SAASC,gBAAgB,EAAEC,qBAAqB,QAAQ,mBAAmB;AAC3E,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAC7C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC;EAEpBL,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,IAAIN,qBAAqB,CAAC,CAAC;IAE5C,MAAMO,aAAa,GAAG,IAAIR,gBAAgB,CAAC;MACvCO,QAAQ;MACRE,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,IAAI;MAChBC,eAAe,EAAE,KAAK;MACtBC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE;IACjB,CAAC,CAAC;IAEFR,GAAG,CAACS,UAAU,CAACP,aAAa,CAAC;IAC7B,OAAO,MAAMF,GAAG,CAACU,aAAa,CAACR,aAAa,CAAC;EACjD,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC;EAET,OAAO,IAAI;AACf,CAAC;AAACD,EAAA,CArBID,WAAW;EAAA,QACDL,MAAM;AAAA;AAAAkB,EAAA,GADhBb,WAAW;AAuBjB,MAAMc,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAM8B,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCT,aAAa,CAACS,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDV,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACZ,MAAMyC,eAAe,GAAG,MAAOC,QAAQ,IAAK;MACxC,MAAMC,GAAG,GAAG,4DAA4DC,kBAAkB,CAACF,QAAQ,CAAC,EAAE;MACtG,KAAK,IAAIG,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;QAC3C,IAAI;UACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACW,GAAG,CAAC;UACjC,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;UAC7D;UACA,MAAMW,MAAM,GAAG,MAAMf,QAAQ,CAACM,IAAI,CAAC,CAAC;UACpC,IAAIS,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;YACnB,MAAM;cAAEC,GAAG;cAAEC;YAAI,CAAC,GAAGH,MAAM,CAAC,CAAC,CAAC;YAC9B,OAAO;cAAEE,GAAG;cAAEC;YAAI,CAAC;UACvB;UACA;QACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;UACZF,OAAO,CAACE,KAAK,CAAC,mBAAmBE,QAAQ,aAAaG,OAAO,IAAI,EAAEL,KAAK,CAAC;UACzE,IAAIK,OAAO,KAAK,CAAC,EAAE;YACf,OAAO,IAAI;UACf;QACJ;MACJ;IACJ,CAAC;IAED,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC3B,UAAU,CAACd,GAAG,CAAC,MAAO0C,IAAI,IAAK;QAClE,MAAMC,aAAa,GAAG,MAAMd,eAAe,CAACa,IAAI,CAACZ,QAAQ,CAAC;QAC1D,IAAIa,aAAa,EAAE;UACf,OAAO;YACH,GAAGD,IAAI;YACPN,GAAG,EAAEO,aAAa,CAACP,GAAG;YACtBC,GAAG,EAAEM,aAAa,CAACN;UACvB,CAAC;QACL;QACA,OAAO,IAAI;MACf,CAAC,CAAC,CAAC;MAEHpB,UAAU,CAACsB,YAAY,CAACK,MAAM,CAACF,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI5B,UAAU,CAACqB,MAAM,GAAG,CAAC,EAAE;MACvBG,gBAAgB,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAACxB,UAAU,CAAC,CAAC;EAEhB,MAAM+B,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;EAE1C,oBACIhD,OAAA;IAAAiD,QAAA,eACIjD,OAAA,CAACR,YAAY;MAAC0D,MAAM,EAAEF,aAAc;MAACG,IAAI,EAAE,EAAG;MAAC7C,KAAK,EAAE;QAAE8C,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE,KAAK;QAAEC,QAAQ,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAQ,CAAE;MAAAN,QAAA,gBACzHjD,OAAA,CAACP,SAAS;QACNyC,GAAG,EAAC,oDAAoD;QACxDsB,WAAW,EAAC;MAAyF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC,eACF5D,OAAA,CAACC,WAAW;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdzC,OAAO,CAAChB,GAAG,CAAC,CAAC8B,QAAQ,EAAE4B,GAAG,kBACvB7D,OAAA,CAACN,MAAM;QAAW4D,QAAQ,EAAE,CAACrB,QAAQ,CAACM,GAAG,EAAEN,QAAQ,CAACO,GAAG,CAAE;QAAAS,QAAA,eACrDjD,OAAA,CAACL,KAAK;UAAAsD,QAAA,GACDhB,QAAQ,CAACA,QAAQ,EAAC,IAAE,EAACA,QAAQ,CAAC6B,QAAQ,EAAC,KAAG,EAAC7B,QAAQ,CAAC8B,MAAM,EAAC,SAChE;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAHCC,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAC5C,GAAA,CAvFID,QAAQ;AAAAiD,GAAA,GAARjD,QAAQ;AAyFd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAkD,GAAA;AAAAC,YAAA,CAAAnD,EAAA;AAAAmD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}