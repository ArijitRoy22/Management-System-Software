{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js\";\n// GradientPieChart.js\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradientPieChart = ({\n  data,\n  title,\n  statusColorMapping\n}) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n  const generateColors = () => {\n    const colors = [];\n    const predefinedColors = Object.values(statusColorMapping);\n    for (let i = 0; i < labels.length; i++) {\n      if (statusColorMapping[labels[i]]) {\n        colors.push(statusColorMapping[labels[i]]);\n      } else {\n        colors.push(predefinedColors[i % predefinedColors.length]);\n      }\n    }\n    return colors;\n  };\n  const options = {\n    chart: {\n      type: 'donut'\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent'\n        }\n      }\n    },\n    fill: {\n      type: 'gradient'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      }\n    },\n    labels,\n    colors: generateColors()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"donut\",\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = GradientPieChart;\nexport default GradientPieChart;\nvar _c;\n$RefreshReg$(_c, \"GradientPieChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","GradientPieChart","data","title","statusColorMapping","series","map","item","value","labels","name","generateColors","colors","predefinedColors","Object","values","i","length","push","options","chart","type","plotOptions","pie","startAngle","endAngle","donut","size","background","fill","dataLabels","enabled","legend","position","formatter","val","opts","w","globals","seriesIndex","className","children","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js"],"sourcesContent":["// GradientPieChart.js\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst GradientPieChart = ({ data, title, statusColorMapping }) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n\n  const generateColors = () => {\n    const colors = [];\n    const predefinedColors = Object.values(statusColorMapping);\n\n    for (let i = 0; i < labels.length; i++) {\n      if (statusColorMapping[labels[i]]) {\n        colors.push(statusColorMapping[labels[i]]);\n      } else {\n        colors.push(predefinedColors[i % predefinedColors.length]);\n      }\n    }\n\n    return colors;\n  };\n\n  const options = {\n    chart: {\n      type: 'donut',\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent',\n        },\n      },\n    },\n    fill: {\n      type: 'gradient',\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      },\n    },\n    labels,\n    colors: generateColors(),\n  };\n\n  return (\n    <div className=\"chart\">\n      <ReactApexChart options={options} series={series} type=\"donut\" height={400} />\n    </div>\n  );\n};\n\nexport default GradientPieChart;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAmB,CAAC,KAAK;EAChE,MAAMC,MAAM,GAAGH,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EAC3C,MAAMC,MAAM,GAAGP,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,CAAC;EAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACX,kBAAkB,CAAC;IAE1D,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIZ,kBAAkB,CAACK,MAAM,CAACO,CAAC,CAAC,CAAC,EAAE;QACjCJ,MAAM,CAACM,IAAI,CAACd,kBAAkB,CAACK,MAAM,CAACO,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLJ,MAAM,CAACM,IAAI,CAACL,gBAAgB,CAACG,CAAC,GAAGH,gBAAgB,CAACI,MAAM,CAAC,CAAC;MAC5D;IACF;IAEA,OAAOL,MAAM;EACf,CAAC;EAED,MAAMO,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,UAAU,EAAE,CAAC,EAAE;QACfC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UACXC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACDC,IAAI,EAAE;MACJR,IAAI,EAAE;IACR,CAAC;IACDS,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;QAC9B,OAAOD,GAAG,GAAG,KAAK,GAAGC,IAAI,CAACC,CAAC,CAACC,OAAO,CAACjC,MAAM,CAAC+B,IAAI,CAACG,WAAW,CAAC;MAC9D;IACF,CAAC;IACD9B,MAAM;IACNG,MAAM,EAAED,cAAc,CAAC;EACzB,CAAC;EAED,oBACEX,OAAA;IAAKwC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBzC,OAAA,CAACF,cAAc;MAACqB,OAAO,EAAEA,OAAQ;MAACd,MAAM,EAAEA,MAAO;MAACgB,IAAI,EAAC,OAAO;MAACqB,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACC,EAAA,GAtDI9C,gBAAgB;AAwDtB,eAAeA,gBAAgB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}