{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchField = () => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const provider = new OpenStreetMapProvider();\n    const searchControl = new GeoSearchControl({\n      provider,\n      style: 'bar',\n      showMarker: true,\n      retainZoomLevel: false,\n      animateZoom: true,\n      autoClose: true,\n      searchLabel: 'Enter address'\n    });\n    map.addControl(searchControl);\n    return () => map.removeControl(searchControl);\n  }, [map]);\n  return null;\n};\n_s(SearchField, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = SearchField;\nconst Location = () => {\n  _s2();\n  const [leavesData, setLeavesData] = useState([]);\n  const [geoData, setGeoData] = useState([]);\n  useEffect(() => {\n    // Fetch leaves data from the server\n    const fetchLeavesData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/data');\n        const data = await response.json();\n        setLeavesData(data);\n      } catch (error) {\n        console.error('Error fetching leaves data:', error);\n      }\n    };\n    fetchLeavesData();\n  }, []);\n  useEffect(() => {\n    // Geocode location names to coordinates\n    const geocodeLocations = async () => {\n      const geocodedData = await Promise.all(leavesData.map(async item => {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(item.location)}`);\n        const result = await response.json();\n        if (result.length > 0) {\n          return {\n            ...item,\n            lat: parseFloat(result[0].lat),\n            lng: parseFloat(result[0].lon)\n          };\n        }\n        return null;\n      }));\n      setGeoData(geocodedData.filter(item => item !== null));\n    };\n    if (leavesData.length > 0) {\n      geocodeLocations();\n    }\n  }, [leavesData]);\n  const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultCenter,\n    zoom: 13,\n    style: {\n      height: \"100vh\",\n      width: \"80px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), geoData.map((location, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [location.lat, location.lng],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [location.location, \": \", location.emp_name, \" - \", location.leaves, \" leaves\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n};\n_s2(Location, \"2jObyz0QFc/9dDpSbULSYHvavi8=\");\n_c2 = Location;\nexport default Location;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchField\");\n$RefreshReg$(_c2, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","GeoSearchControl","OpenStreetMapProvider","jsxDEV","_jsxDEV","SearchField","_s","map","provider","searchControl","style","showMarker","retainZoomLevel","animateZoom","autoClose","searchLabel","addControl","removeControl","_c","Location","_s2","leavesData","setLeavesData","geoData","setGeoData","fetchLeavesData","response","fetch","data","json","error","console","geocodeLocations","geocodedData","Promise","all","item","encodeURIComponent","location","result","length","lat","parseFloat","lng","lon","filter","defaultCenter","center","zoom","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","idx","position","emp_name","leaves","_c2","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css'\n\nconst SearchField = () => {\n    const map = useMap();\n\n    useEffect(() => {\n        const provider = new OpenStreetMapProvider();\n\n        const searchControl = new GeoSearchControl({\n            provider,\n            style: 'bar',\n            showMarker: true,\n            retainZoomLevel: false,\n            animateZoom: true,\n            autoClose: true,\n            searchLabel: 'Enter address'\n        });\n\n        map.addControl(searchControl);\n        return () => map.removeControl(searchControl);\n    }, [map]);\n\n    return null;\n};\n\nconst Location = () => {\n    const [leavesData, setLeavesData] = useState([]);\n    const [geoData, setGeoData] = useState([]);\n\n    useEffect(() => {\n        // Fetch leaves data from the server\n        const fetchLeavesData = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/data');\n                const data = await response.json();\n                setLeavesData(data);\n            } catch (error) {\n                console.error('Error fetching leaves data:', error);\n            }\n        };\n\n        fetchLeavesData();\n    }, []);\n\n    useEffect(() => {\n        // Geocode location names to coordinates\n        const geocodeLocations = async () => {\n            const geocodedData = await Promise.all(leavesData.map(async (item) => {\n                const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(item.location)}`);\n                const result = await response.json();\n                if (result.length > 0) {\n                    return {\n                        ...item,\n                        lat: parseFloat(result[0].lat),\n                        lng: parseFloat(result[0].lon)\n                    };\n                }\n                return null;\n            }));\n\n            setGeoData(geocodedData.filter(item => item !== null));\n        };\n\n        if (leavesData.length > 0) {\n            geocodeLocations();\n        }\n    }, [leavesData]);\n\n    const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n    return (\n            <MapContainer center={defaultCenter} zoom={13} style={{ height: \"100vh\", width: \"80px\" }}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                <SearchField />\n                {geoData.map((location, idx) => (\n                    <Marker key={idx} position={[location.lat, location.lng]}>\n                        <Popup>\n                            {location.location}: {location.emp_name} - {location.leaves} leaves\n                        </Popup>\n                    </Marker>\n                ))}\n            </MapContainer>\n    );\n};\n\nexport default Location;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}