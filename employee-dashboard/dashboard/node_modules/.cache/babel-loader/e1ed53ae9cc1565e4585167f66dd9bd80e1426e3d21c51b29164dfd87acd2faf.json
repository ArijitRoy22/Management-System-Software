{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientDonutChart from './GradientDonutChart'; // Import the GradientDonutChart\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count unique departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Number of Employees: \", totalEmployees]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gradient Donut Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GradientDonutChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"coYtyYz8orwfsy3CM+FrtoDB4g4=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","GradientDonutChart","jsxDEV","_jsxDEV","Overview","_s","totalEmployees","setTotalEmployees","departmentCounts","setDepartmentCounts","statusCounts","setStatusCounts","fetchData","response","get","csvData","data","uniqueNames","Set","map","item","emp_name","size","deptCounts","reduce","acc","department","add","departmentCountMap","Object","keys","status","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientDonutChart from './GradientDonutChart'; // Import the GradientDonutChart\nimport './Overview.css';\n\nconst Overview = () => {\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count unique departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 2000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className='Overview-container'>\n      <h1>Employee Time Sheet</h1>\n      <p>Total Number of Employees: {totalEmployees}</p>\n      \n      <div className='chart-container'>\n        <div className='chart1'>\n          <h2>Gradient Donut Chart</h2>\n          <GradientDonutChart />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}