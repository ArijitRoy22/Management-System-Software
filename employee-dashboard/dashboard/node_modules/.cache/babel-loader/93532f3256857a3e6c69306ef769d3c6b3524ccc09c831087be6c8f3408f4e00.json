{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  // State to store the fetched data\n  const [employeeData, setEmployeeData] = useState([]);\n  const [timesheetStatusData, setTimesheetStatusData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n\n  // Fetching data inside useEffect to mimic componentDidMount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch employee data\n        const employeeResponse = await axios.get('your-api-endpoint/employee_data');\n        const employeeDetails = employeeResponse.data.map(employee => ({\n          firstName: employee.User_Fname,\n          lastName: employee.User_Lname,\n          status: employee.User_Status,\n          id: employee.Emp_ID\n        }));\n        setEmployeeData(employeeDetails);\n\n        // Fetch timesheet data for status breakdown\n        const timesheetResponse = await axios.get('your-api-endpoint/timesheet');\n        const timesheetData = timesheetResponse.data;\n        const timesheetStatusSummary = timesheetData.reduce((acc, timesheet) => {\n          const status = timesheet.Status;\n          if (acc[status]) {\n            acc[status] += 1;\n          } else {\n            acc[status] = 1;\n          }\n          return acc;\n        }, {});\n        const timesheetStatusChartData = Object.entries(timesheetStatusSummary).map(([status, count]) => ({\n          name: status,\n          value: count\n        }));\n        setTimesheetStatusData(timesheetStatusChartData);\n\n        // Fetch timesheet data for project distribution\n        const projectSummary = {};\n        timesheetData.forEach(timesheet => {\n          const project = timesheet.project;\n          if (!projectSummary[project]) {\n            projectSummary[project] = new Set();\n          }\n          projectSummary[project].add(timesheet.User_Id);\n        });\n        const projectChartData = Object.entries(projectSummary).map(([project, users]) => ({\n          name: `Project ${project}`,\n          value: users.size\n        }));\n        setProjectData(projectChartData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const pieChartColors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employeeData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [employee.firstName, \" \", employee.lastName, \" - \", employee.status, \" (ID: \", employee.id, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Overview Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Timesheet Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: timesheetStatusData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            children: timesheetStatusData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: pieChartColors[index % pieChartColors.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Project Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: projectData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            children: projectData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: pieChartColors[index % pieChartColors.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"sV91+1TK51FhmfpWGLBhi/QWReM=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","PieChart","Pie","Cell","Tooltip","Legend","jsxDEV","_jsxDEV","Overview","_s","employeeData","setEmployeeData","timesheetStatusData","setTimesheetStatusData","projectData","setProjectData","fetchData","employeeResponse","get","employeeDetails","data","map","employee","firstName","User_Fname","lastName","User_Lname","status","User_Status","id","Emp_ID","timesheetResponse","timesheetData","timesheetStatusSummary","reduce","acc","timesheet","Status","timesheetStatusChartData","Object","entries","count","name","value","projectSummary","forEach","project","Set","add","User_Id","projectChartData","users","size","error","console","pieChartColors","children","fileName","_jsxFileName","lineNumber","columnNumber","index","style","display","justifyContent","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","entry","length","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\n\nconst Overview = () => {\n  // State to store the fetched data\n  const [employeeData, setEmployeeData] = useState([]);\n  const [timesheetStatusData, setTimesheetStatusData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n\n  // Fetching data inside useEffect to mimic componentDidMount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch employee data\n        const employeeResponse = await axios.get('your-api-endpoint/employee_data');\n        const employeeDetails = employeeResponse.data.map(employee => ({\n          firstName: employee.User_Fname,\n          lastName: employee.User_Lname,\n          status: employee.User_Status,\n          id: employee.Emp_ID,\n        }));\n        setEmployeeData(employeeDetails);\n\n        // Fetch timesheet data for status breakdown\n        const timesheetResponse = await axios.get('your-api-endpoint/timesheet');\n        const timesheetData = timesheetResponse.data;\n        const timesheetStatusSummary = timesheetData.reduce((acc, timesheet) => {\n          const status = timesheet.Status;\n          if (acc[status]) {\n            acc[status] += 1;\n          } else {\n            acc[status] = 1;\n          }\n          return acc;\n        }, {});\n        const timesheetStatusChartData = Object.entries(timesheetStatusSummary).map(([status, count]) => ({\n          name: status,\n          value: count,\n        }));\n        setTimesheetStatusData(timesheetStatusChartData);\n\n        // Fetch timesheet data for project distribution\n        const projectSummary = {};\n        timesheetData.forEach(timesheet => {\n          const project = timesheet.project;\n          if (!projectSummary[project]) {\n            projectSummary[project] = new Set();\n          }\n          projectSummary[project].add(timesheet.User_Id);\n        });\n        const projectChartData = Object.entries(projectSummary).map(([project, users]) => ({\n          name: `Project ${project}`,\n          value: users.size,\n        }));\n        setProjectData(projectChartData);\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const pieChartColors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <div>\n      <h2>Employee Details</h2>\n      <ul>\n        {employeeData.map((employee, index) => (\n          <li key={index}>\n            {employee.firstName} {employee.lastName} - {employee.status} (ID: {employee.id})\n          </li>\n        ))}\n      </ul>\n\n      <h2>Overview Section</h2>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        {/* Timesheet Status Pie Chart */}\n        <div>\n          <h3>Timesheet Status</h3>\n          <PieChart width={400} height={400}>\n            <Pie\n              data={timesheetStatusData}\n              dataKey=\"value\"\n              nameKey=\"name\"\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={150}\n              fill=\"#8884d8\"\n            >\n              {timesheetStatusData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={pieChartColors[index % pieChartColors.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        </div>\n\n        {/* Project Distribution Pie Chart */}\n        <div>\n          <h3>Project Distribution</h3>\n          <PieChart width={400} height={400}>\n            <Pie\n              data={projectData}\n              dataKey=\"value\"\n              nameKey=\"name\"\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={150}\n              fill=\"#8884d8\"\n            >\n              {projectData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={pieChartColors[index % pieChartColors.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}