{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from the APIs\n        const [employeeResponse, timesheetResponse, companyDetailsResponse] = await Promise.all([axios.get('http://localhost:5001/Employee_Data1'), axios.get('http://localhost:5001/timesheet'), axios.get('http://localhost:5001/CompanyDetails')]);\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Console log the data for debugging\n        console.log('Employee Data:', employeeData);\n        console.log('Timesheet Data:', timesheetData);\n        console.log('Company Details Data:', companyDetailsData);\n\n        // Group company details by company ID for lookup\n        const companyMap = companyDetailsData.reduce((acc, company) => {\n          if (company.company_id && company.company_name) {\n            acc[company.company_id] = company.company_name;\n          } else {\n            console.warn('Skipping invalid company entry:', company);\n          }\n          return acc;\n        }, {});\n        console.log('Company Map:', companyMap);\n\n        // Map timesheet entries to user ID and projects\n        const employeeProjectsMap = timesheetData.reduce((acc, timesheetEntry) => {\n          const userId = timesheetEntry.User_Id;\n          const projectId = timesheetEntry.project;\n          const projectName = companyMap[projectId] || 'Unknown Project';\n          if (!acc[userId]) {\n            acc[userId] = new Set();\n          }\n          acc[userId].add(projectName);\n          return acc;\n        }, {});\n\n        // Console log to verify the mapping\n        console.log('Employee Projects Map:', employeeProjectsMap);\n\n        // Combine employee data with project data\n        const combinedData = employeeData.map(employee => {\n          const employeeProjectsList = employeeProjectsMap[employee.Emp_ID] ? Array.from(employeeProjectsMap[employee.Emp_ID]).join(', ') : 'No project assigned';\n          return {\n            name: employee.User_Fname || 'N/A',\n            email: employee.User_Email || 'N/A',\n            status: employee.User_Status || 'N/A',\n            projects: employeeProjectsList\n          };\n        });\n        console.log('Combined Data:', combinedData);\n        setEmployeesData(combinedData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false); // Ensure loading is set to false in case of an error\n      }\n    };\n    fetchEmployeeData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EmployeeTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employeesData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"BPedrDH3a/L6uJrRisudSRUow6o=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Overview","_s","employeesData","setEmployeesData","loading","setLoading","fetchEmployeeData","employeeResponse","timesheetResponse","companyDetailsResponse","Promise","all","get","employeeData","data","timesheetData","companyDetailsData","console","log","companyMap","reduce","acc","company","company_id","company_name","warn","employeeProjectsMap","timesheetEntry","userId","User_Id","projectId","project","projectName","Set","add","combinedData","map","employee","employeeProjectsList","Emp_ID","Array","from","join","name","User_Fname","email","User_Email","status","User_Status","projects","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\n\nconst Overview = () => {\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from the APIs\n        const [employeeResponse, timesheetResponse, companyDetailsResponse] = await Promise.all([\n          axios.get('http://localhost:5001/Employee_Data1'),\n          axios.get('http://localhost:5001/timesheet'),\n          axios.get('http://localhost:5001/CompanyDetails'),\n        ]);\n\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Console log the data for debugging\n        console.log('Employee Data:', employeeData);\n        console.log('Timesheet Data:', timesheetData);\n        console.log('Company Details Data:', companyDetailsData);\n\n        // Group company details by company ID for lookup\n        const companyMap = companyDetailsData.reduce((acc, company) => {\n          if (company.company_id && company.company_name) {\n            acc[company.company_id] = company.company_name;\n          } else {\n            console.warn('Skipping invalid company entry:', company);\n          }\n          return acc;\n        }, {});\n\n        console.log('Company Map:', companyMap);\n\n        // Map timesheet entries to user ID and projects\n        const employeeProjectsMap = timesheetData.reduce((acc, timesheetEntry) => {\n          const userId = timesheetEntry.User_Id;\n          const projectId = timesheetEntry.project;\n          const projectName = companyMap[projectId] || 'Unknown Project';\n\n          if (!acc[userId]) {\n            acc[userId] = new Set();\n          }\n          acc[userId].add(projectName);\n\n          return acc;\n        }, {});\n\n        // Console log to verify the mapping\n        console.log('Employee Projects Map:', employeeProjectsMap);\n\n        // Combine employee data with project data\n        const combinedData = employeeData.map((employee) => {\n          const employeeProjectsList = employeeProjectsMap[employee.Emp_ID]\n            ? Array.from(employeeProjectsMap[employee.Emp_ID]).join(', ')\n            : 'No project assigned';\n\n          return {\n            name: employee.User_Fname || 'N/A',\n            email: employee.User_Email || 'N/A',\n            status: employee.User_Status || 'N/A',\n            projects: employeeProjectsList,\n          };\n        });\n\n        console.log('Combined Data:', combinedData);\n        setEmployeesData(combinedData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false); // Ensure loading is set to false in case of an error\n      }\n    };\n\n    fetchEmployeeData();\n  }, []);\n\n  return (\n    <div className=\"Overview-container\">\n      <h1 className=\"title\">Employee Project Details</h1>\n      <div className=\"EmployeeTable\">\n        <h2>Employees Details</h2>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Employee Name</th>\n                <th>Email</th>\n                <th>Status</th>\n                <th>Projects</th>\n              </tr>\n            </thead>\n            <tbody>\n              {employeesData.map((employee, index) => (\n                <tr key={index}>\n                  <td>{employee.name}</td>\n                  <td>{employee.email}</td>\n                  <td>{employee.status}</td>\n                  <td>{employee.projects}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}