{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [employeesData, setEmployeesData] = useState([]);\n  //   const [projects, setProjects] = useState({});\n  //   const [timesheetData, setTimesheetData] = useState([]);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from Employee_Data1 API\n        const employeeResponse = await axios.get('http://localhost:5001/Employee_Data1');\n        const timesheetResponse = await axios.get('http://localhost:5001/timesheet');\n        const companyDetailsResponse = await axios.get('http://localhost:5001/CompanyDetails');\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Group projects by company ID for easier lookup\n        const projectMapping = companyDetailsData.reduce((acc, project) => {\n          acc[project.company_id] = project.company_name;\n          return acc;\n        }, {});\n\n        // Map employee data with projects\n        const employeeProjects = timesheetData.reduce((acc, timesheetEntry) => {\n          const userId = timesheetEntry.User_Id;\n          const projectId = timesheetEntry.project;\n          const projectName = projectMapping[projectId] || 'Unknown Project';\n          if (!acc[userId]) {\n            acc[userId] = new Set();\n          }\n          acc[userId].add(projectName);\n          return acc;\n        }, {});\n\n        // Combine employee data with project data\n        const combinedData = employeeData.map(employee => {\n          const employeeProjectsList = employeeProjects[employee.User_Id] ? Array.from(employeeProjects[employee.User_Id]).join(', ') : 'No project assigned';\n          return {\n            name: employee.emp_name,\n            email: employee.email,\n            status: employee.User_status,\n            projects: employeeProjectsList\n          };\n        });\n        setEmployeesData(combinedData);\n        setTimesheetData(timesheetData);\n        setProjects(projectMapping);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchEmployeeData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EmployeeTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employeesData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"yi6b+A59oRsiS6vdvXURrqOAAVM=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Overview","_s","employeesData","setEmployeesData","fetchEmployeeData","employeeResponse","get","timesheetResponse","companyDetailsResponse","employeeData","data","timesheetData","companyDetailsData","projectMapping","reduce","acc","project","company_id","company_name","employeeProjects","timesheetEntry","userId","User_Id","projectId","projectName","Set","add","combinedData","map","employee","employeeProjectsList","Array","from","join","name","emp_name","email","status","User_status","projects","setTimesheetData","setProjects","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\n\nconst Overview = () => {\n  const [employeesData, setEmployeesData] = useState([]);\n//   const [projects, setProjects] = useState({});\n//   const [timesheetData, setTimesheetData] = useState([]);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      try {\n        // Fetch data from Employee_Data1 API\n        const employeeResponse = await axios.get('http://localhost:5001/Employee_Data1');\n        const timesheetResponse = await axios.get('http://localhost:5001/timesheet');\n        const companyDetailsResponse = await axios.get('http://localhost:5001/CompanyDetails');\n\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Group projects by company ID for easier lookup\n        const projectMapping = companyDetailsData.reduce((acc, project) => {\n          acc[project.company_id] = project.company_name;\n          return acc;\n        }, {});\n\n        // Map employee data with projects\n        const employeeProjects = timesheetData.reduce((acc, timesheetEntry) => {\n          const userId = timesheetEntry.User_Id;\n          const projectId = timesheetEntry.project;\n          const projectName = projectMapping[projectId] || 'Unknown Project';\n\n          if (!acc[userId]) {\n            acc[userId] = new Set();\n          }\n          acc[userId].add(projectName);\n\n          return acc;\n        }, {});\n\n        // Combine employee data with project data\n        const combinedData = employeeData.map((employee) => {\n          const employeeProjectsList = employeeProjects[employee.User_Id]\n            ? Array.from(employeeProjects[employee.User_Id]).join(', ')\n            : 'No project assigned';\n\n          return {\n            name: employee.emp_name,\n            email: employee.email,\n            status: employee.User_status,\n            projects: employeeProjectsList,\n          };\n        });\n\n        setEmployeesData(combinedData);\n        setTimesheetData(timesheetData);\n        setProjects(projectMapping);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchEmployeeData();\n  }, []);\n\n  return (\n    <div className='Overview-container'>\n      <h1 className='title'>Employee Project Details</h1>\n      <div className='EmployeeTable'>\n        <h2>Employees Details</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Employee Name</th>\n              <th>Email</th>\n              <th>Status</th>\n              <th>Projects</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employeesData.map((employee, index) => (\n              <tr key={index}>\n                <td>{employee.name}</td>\n                <td>{employee.email}</td>\n                <td>{employee.status}</td>\n                <td>{employee.projects}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}