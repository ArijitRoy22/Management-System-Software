{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Overview from './components/Overview';\nimport Sidebar from './components/Sidebar';\nimport Project from './components/Project';\nimport Login from './components/Login'; // Assuming you have a Login component\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [role, setRole] = useState(null);\n  useEffect(() => {\n    // Check for the token and fetch the role\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Assuming the role is stored in localStorage or can be extracted from token\n      const storedRole = localStorage.getItem('role'); // Simplifying here, role could also be fetched\n      setRole(parseInt(storedRole, 10)); // Convert to an integer\n    }\n  }, []);\n  const handleLogin = userRole => {\n    setRole(userRole); // Update role after login\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setRole(null);\n  };\n  if (!role) {\n    // If not logged in, redirect to login\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        role: role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [role === 2 &&\n        /*#__PURE__*/\n        // Admin has access to both Overview and Project\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Overview, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Project\",\n            element: /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), role === 4 &&\n        /*#__PURE__*/\n        // Project manager only sees the Project section\n        _jsxDEV(Route, {\n          path: \"/Project\",\n          element: /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), role === 5 &&\n        /*#__PURE__*/\n        // Employee only sees the Overview section\n        _jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Overview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GMLvItH/JZBp/dwIzvmJB4jdCdo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Overview","Sidebar","Project","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","role","setRole","token","localStorage","getItem","storedRole","parseInt","handleLogin","userRole","handleLogout","removeItem","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","to","onClick","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Overview from './components/Overview';\nimport Sidebar from './components/Sidebar';\nimport Project from './components/Project';\nimport Login from './components/Login'; // Assuming you have a Login component\nimport './App.css';\n\nfunction App() {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    // Check for the token and fetch the role\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Assuming the role is stored in localStorage or can be extracted from token\n      const storedRole = localStorage.getItem('role'); // Simplifying here, role could also be fetched\n      setRole(parseInt(storedRole, 10)); // Convert to an integer\n    }\n  }, []);\n\n  const handleLogin = (userRole) => {\n    setRole(userRole); // Update role after login\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setRole(null);\n  };\n\n  if (!role) {\n    // If not logged in, redirect to login\n    return <Login onLogin={handleLogin} />;\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Sidebar role={role} />\n        <Routes>\n          {role === 2 && ( // Admin has access to both Overview and Project\n            <>\n              <Route path=\"/\" element={<Overview />} />\n              <Route path=\"/Project\" element={<Project />} />\n            </>\n          )}\n\n          {role === 4 && ( // Project manager only sees the Project section\n            <Route path=\"/Project\" element={<Project />} />\n          )}\n\n          {role === 5 && ( // Employee only sees the Overview section\n            <Route path=\"/\" element={<Overview />} />\n          )}\n\n          {/* Default redirect if no matching route */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n      <button onClick={handleLogout}>Logout</button>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}