{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/LineChart.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst convertToHoursAndMinutes = minutes => {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  return `${hours} hours ${mins} minutes`;\n};\nconst convertToHoursAndMinutes1 = minutes => {\n  const hours = Math.floor(minutes / 60);\n  return `${hours} hours`;\n};\nconst LineChart = ({\n  data,\n  totalData,\n  title,\n  xaxisTitle,\n  yaxisTitle,\n  showTotalPoint,\n  isDefault\n}) => {\n  const uniqueDates = [...new Set(data.map(item => item.date))].filter(date => date);\n  const chartOptions = {\n    chart: {\n      type: 'line'\n    },\n    xaxis: {\n      categories: uniqueDates,\n      title: {\n        text: xaxisTitle\n      }\n    },\n    yaxis: {\n      title: {\n        text: yaxisTitle\n      },\n      labels: {\n        formatter: value => convertToHoursAndMinutes1(value)\n      }\n    },\n    title: {\n      text: title\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    markers: {\n      size: 5,\n      colors: ['#FF4560', '#00E396']\n    },\n    series: [{\n      name: 'Daily Time',\n      data: uniqueDates.map(date => {\n        const entry = data.find(item => item.date === date);\n        return entry ? entry.value : 0;\n      }),\n      color: '#00E396'\n    }],\n    tooltip: {\n      y: {\n        formatter: value => convertToHoursAndMinutes(value)\n      }\n    }\n  };\n\n  // Handle case for default filter type\n  if (isDefault) {\n    const uniqueMonths = [...new Set(data.map(item => item.date && item.date.substring(0, 7)))].filter(month => month);\n    chartOptions.xaxis.categories = uniqueMonths; // Use unique months for x-axis categories\n    chartOptions.series = [{\n      name: 'Total Time',\n      data: uniqueMonths.map(month => {\n        const totalEntry = totalData.find(item => item.date && item.date.substring(0, 7) === month);\n        return totalEntry ? totalEntry.value : 0;\n      }),\n      color: '#00E396'\n    }];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: chartOptions.series,\n      type: \"line\",\n      height: \"350\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","convertToHoursAndMinutes","minutes","hours","Math","floor","mins","convertToHoursAndMinutes1","LineChart","data","totalData","title","xaxisTitle","yaxisTitle","showTotalPoint","isDefault","uniqueDates","Set","map","item","date","filter","chartOptions","chart","type","xaxis","categories","text","yaxis","labels","formatter","value","stroke","curve","dataLabels","enabled","markers","size","colors","series","name","entry","find","color","tooltip","y","uniqueMonths","substring","month","totalEntry","children","options","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/LineChart.js"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst convertToHoursAndMinutes = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return `${hours} hours ${mins} minutes`;\n};\n\nconst convertToHoursAndMinutes1 = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    return `${hours} hours`;\n};\n\nconst LineChart = ({ data, totalData, title, xaxisTitle, yaxisTitle, showTotalPoint, isDefault }) => {\n    \n    const uniqueDates = [...new Set(data.map(item => item.date))].filter(date => date);\n\n    const chartOptions = {\n        chart: {\n            type: 'line'\n        },\n        xaxis: {\n            categories: uniqueDates,\n            title: {\n                text: xaxisTitle\n            }\n        },\n        yaxis: {\n            title: {\n                text: yaxisTitle\n            },\n            labels: {\n                formatter: (value) => convertToHoursAndMinutes1(value)\n            }\n        },\n        title: {\n            text: title\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        markers: {\n            size: 5,\n            colors: ['#FF4560', '#00E396']\n        },\n        series: [\n            {\n                name: 'Daily Time',\n                data: uniqueDates.map(date => {\n                    const entry = data.find(item => item.date === date);\n                    return entry ? entry.value : 0;\n                }),\n                color: '#00E396'\n            },\n        ],\n        tooltip: {\n            y: {\n                formatter: (value) => convertToHoursAndMinutes(value)\n            }\n        }\n    };\n\n    // Handle case for default filter type\n    if (isDefault) {\n        const uniqueMonths = [...new Set(data.map(item => item.date && item.date.substring(0, 7)))].filter(month => month);\n        chartOptions.xaxis.categories = uniqueMonths; // Use unique months for x-axis categories\n        chartOptions.series = [\n            {\n                name: 'Total Time',\n                data: uniqueMonths.map(month => {\n                    const totalEntry = totalData.find(item => item.date && item.date.substring(0, 7) === month);\n                    return totalEntry ? totalEntry.value : 0;\n                }),\n                color: '#00E396'\n            }\n        ];\n    }\n\n    return (\n        <div>\n            <Chart options={chartOptions} series={chartOptions.series} type=\"line\" height=\"350\" />\n        </div>\n    );\n};\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}