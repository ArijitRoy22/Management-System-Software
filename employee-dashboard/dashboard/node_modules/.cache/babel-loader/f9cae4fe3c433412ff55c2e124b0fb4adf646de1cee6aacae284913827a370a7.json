{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch data from all APIs concurrently\n        const [employeeResponse, timesheetResponse, companyDetailsResponse] = await Promise.all([axios.get('http://localhost:5001/Employee_Data1'), axios.get('http://localhost:5001/timesheet'), axios.get('http://localhost:5001/CompanyDetails')]);\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Create a mapping from company_id to company_name\n        const companyMap = companyDetailsData.reduce((acc, company) => {\n          var _company$company_name;\n          const companyId = String(company.company_id).trim();\n          const companyName = (_company$company_name = company.company_name) === null || _company$company_name === void 0 ? void 0 : _company$company_name.trim();\n          if (companyId && companyName) {\n            acc[companyId] = companyName;\n          }\n          return acc;\n        }, {});\n\n        // Create a mapping from User_Id to a set of project names\n        const userProjectsMap = timesheetData.reduce((acc, timesheetEntry) => {\n          var _timesheetEntry$User_;\n          const userId = (_timesheetEntry$User_ = timesheetEntry.User_Id) === null || _timesheetEntry$User_ === void 0 ? void 0 : _timesheetEntry$User_.trim();\n          const projectId = String(timesheetEntry.project).trim();\n          if (userId) {\n            const projectName = companyMap[projectId] || `Unknown Project (${projectId})`;\n            if (!acc[userId]) {\n              acc[userId] = new Set();\n            }\n            acc[userId].add(projectName);\n          }\n          return acc;\n        }, {});\n\n        // Combine employee data with their associated projects\n        const combinedData = employeeData.map(employee => {\n          var _employee$Emp_ID, _employee$User_Fname, _employee$User_Email, _employee$User_Status;\n          const empId = (_employee$Emp_ID = employee.Emp_ID) === null || _employee$Emp_ID === void 0 ? void 0 : _employee$Emp_ID.trim();\n          const projects = userProjectsMap[empId] ? Array.from(userProjectsMap[empId]).join(', ') : 'No project assigned';\n          return {\n            name: ((_employee$User_Fname = employee.User_Fname) === null || _employee$User_Fname === void 0 ? void 0 : _employee$User_Fname.trim()) || 'N/A',\n            email: ((_employee$User_Email = employee.User_Email) === null || _employee$User_Email === void 0 ? void 0 : _employee$User_Email.trim()) || 'N/A',\n            status: ((_employee$User_Status = employee.User_Status) === null || _employee$User_Status === void 0 ? void 0 : _employee$User_Status.trim()) || 'N/A',\n            projects\n          };\n        });\n        setEmployeesData(combinedData);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('An error occurred while fetching employee data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployeeData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EmployeeTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employeesData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"55THOB/m7eZcGNdMGjyDf1FNpOg=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Overview","_s","employeesData","setEmployeesData","loading","setLoading","error","setError","fetchEmployeeData","employeeResponse","timesheetResponse","companyDetailsResponse","Promise","all","get","employeeData","data","timesheetData","companyDetailsData","companyMap","reduce","acc","company","_company$company_name","companyId","String","company_id","trim","companyName","company_name","userProjectsMap","timesheetEntry","_timesheetEntry$User_","userId","User_Id","projectId","project","projectName","Set","add","combinedData","map","employee","_employee$Emp_ID","_employee$User_Fname","_employee$User_Email","_employee$User_Status","empId","Emp_ID","projects","Array","from","join","name","User_Fname","email","User_Email","status","User_Status","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Overview.css';\n\nconst Overview = () => {\n  const [employeesData, setEmployeesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Fetch data from all APIs concurrently\n        const [employeeResponse, timesheetResponse, companyDetailsResponse] = await Promise.all([\n          axios.get('http://localhost:5001/Employee_Data1'),\n          axios.get('http://localhost:5001/timesheet'),\n          axios.get('http://localhost:5001/CompanyDetails'),\n        ]);\n\n        const employeeData = employeeResponse.data;\n        const timesheetData = timesheetResponse.data;\n        const companyDetailsData = companyDetailsResponse.data;\n\n        // Create a mapping from company_id to company_name\n        const companyMap = companyDetailsData.reduce((acc, company) => {\n          const companyId = String(company.company_id).trim();\n          const companyName = company.company_name?.trim();\n\n          if (companyId && companyName) {\n            acc[companyId] = companyName;\n          }\n\n          return acc;\n        }, {});\n\n        // Create a mapping from User_Id to a set of project names\n        const userProjectsMap = timesheetData.reduce((acc, timesheetEntry) => {\n          const userId = timesheetEntry.User_Id?.trim();\n          const projectId = String(timesheetEntry.project).trim();\n\n          if (userId) {\n            const projectName = companyMap[projectId] || `Unknown Project (${projectId})`;\n\n            if (!acc[userId]) {\n              acc[userId] = new Set();\n            }\n            acc[userId].add(projectName);\n          }\n\n          return acc;\n        }, {});\n\n        // Combine employee data with their associated projects\n        const combinedData = employeeData.map((employee) => {\n          const empId = employee.Emp_ID?.trim();\n          const projects = userProjectsMap[empId]\n            ? Array.from(userProjectsMap[empId]).join(', ')\n            : 'No project assigned';\n\n          return {\n            name: employee.User_Fname?.trim() || 'N/A',\n            email: employee.User_Email?.trim() || 'N/A',\n            status: employee.User_Status?.trim() || 'N/A',\n            projects,\n          };\n        });\n\n        setEmployeesData(combinedData);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('An error occurred while fetching employee data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEmployeeData();\n  }, []);\n\n  return (\n    <div className=\"Overview-container\">\n      <h1 className=\"title\">Employee Project Details</h1>\n      <div className=\"EmployeeTable\">\n        <h2>Employees Details</h2>\n        {loading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p className=\"error-message\">{error}</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Employee Name</th>\n                <th>Email</th>\n                <th>Status</th>\n                <th>Projects</th>\n              </tr>\n            </thead>\n            <tbody>\n              {employeesData.map((employee, index) => (\n                <tr key={index}>\n                  <td>{employee.name}</td>\n                  <td>{employee.email}</td>\n                  <td>{employee.status}</td>\n                  <td>{employee.projects}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}