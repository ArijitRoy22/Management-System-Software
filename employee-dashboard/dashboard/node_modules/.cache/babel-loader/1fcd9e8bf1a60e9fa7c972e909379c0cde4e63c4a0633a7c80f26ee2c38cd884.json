{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5002/login', {\n        email,\n        password\n      });\n      console.log(response);\n      const {\n        token,\n        role\n      } = response.data;\n\n      // Check if token and role exist in the response\n      if (token && role) {\n        // Store token and role in local storage only after successful login\n        localStorage.setItem('token', token);\n        localStorage.setItem('role', role);\n\n        // Handle roles, split by comma if multiple, and find the highest priority role\n        const roleArray = role.split(',').map(Number); // In case roles are passed as a string \"2,4,5\"\n        const highestRole = Math.min(...roleArray); // Admin (role 2) gets highest priority\n\n        onLogin(highestRole); // Pass the highest role to handle role-based rendering\n      }\n    } catch (error) {\n      setError('Invalid credentials');\n      // Clear localStorage if login fails\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: togglePasswordVisibility,\n            style: {\n              position: 'absolute',\n              right: '10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              cursor: 'pointer'\n            },\n            children: showPassword ? 'üôà' : 'üëÅÔ∏è'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"/zlk35hW4nD8SjSO08bCAlX/sMQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","handleLogin","e","preventDefault","response","post","console","log","token","role","data","localStorage","setItem","roleArray","split","map","Number","highestRole","Math","min","removeItem","togglePasswordVisibility","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","position","display","onClick","right","top","transform","cursor","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Login = ({ onLogin }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:5002/login', { email, password });\n            console.log(response)\n            const { token, role } = response.data;\n\n            // Check if token and role exist in the response\n            if (token && role) {\n                // Store token and role in local storage only after successful login\n                localStorage.setItem('token', token);\n                localStorage.setItem('role', role);\n\n                // Handle roles, split by comma if multiple, and find the highest priority role\n                const roleArray = role.split(',').map(Number);  // In case roles are passed as a string \"2,4,5\"\n                const highestRole = Math.min(...roleArray);  // Admin (role 2) gets highest priority\n\n                onLogin(highestRole);  // Pass the highest role to handle role-based rendering\n            }\n        } catch (error) {\n            setError('Invalid credentials');\n            // Clear localStorage if login fails\n            localStorage.removeItem('token');\n            localStorage.removeItem('role');\n        }\n    };\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label>Email: </label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Password: </label>\n                    <div style={{ position: 'relative', display: 'inline-block' }}>\n                        <input\n                            type={showPassword ? 'text' : 'password'}\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <span\n                            onClick={togglePasswordVisibility}\n                            style={{\n                                position: 'absolute',\n                                right: '10px',\n                                top: '50%',\n                                transform: 'translateY(-50%)',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            {showPassword ? 'üôà' : 'üëÅÔ∏è'}\n                        </span>\n                    </div>\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}