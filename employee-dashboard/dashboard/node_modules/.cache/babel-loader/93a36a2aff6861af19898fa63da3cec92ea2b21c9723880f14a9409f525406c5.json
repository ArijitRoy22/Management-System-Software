{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport LineChart from './LineChart'; // Import the LineChart component\nimport './Location.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Location = () => {\n  _s();\n  const [employees, setEmployees] = useState([]); // List of all employees with department\n  const [selectedEmployee, setSelectedEmployee] = useState(''); // Selected employee name\n  const [statusCounts, setStatusCounts] = useState({});\n  const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n  const [filterType, setFilterType] = useState('default');\n  const [filterValue, setFilterValue] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [lineChartData, setLineChartData] = useState([]);\n  const [breakLineChartData, setBreakLineChartData] = useState([]);\n  const [totalLineChartData, setTotalLineChartData] = useState([]);\n  const [totalBreakLineChartData, setTotalBreakLineChartData] = useState([]);\n  const convertToMinutes = time => {\n    const [hours, decimalMinutes] = time.split('.').map(Number);\n    const minutes = Math.round(decimalMinutes);\n    return hours * 60 + minutes;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Get unique employee names and their departments\n        const uniqueEmployees = Array.from(new Set(csvData.map(item => `${item.emp_name}:${item.department}`))).map(emp => {\n          const [name, department] = emp.split(':');\n          return {\n            name,\n            department\n          };\n        });\n        setEmployees(uniqueEmployees);\n        let filteredData = csvData;\n\n        // Apply employee filter\n        if (selectedEmployee) {\n          filteredData = filteredData.filter(item => item.emp_name === selectedEmployee);\n        }\n\n        // Apply date filters\n        if (filterType === 'day') {\n          filteredData = filteredData.filter(item => item.date === filterValue);\n        } else if (filterType === 'week') {\n          filteredData = filteredData.filter(item => item.date >= startDate && item.date <= endDate);\n        } else if (filterType === 'month') {\n          filteredData = filteredData.filter(item => item.date.startsWith(filterValue));\n        }\n        const statusCounts = filteredData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n        let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n        let overflowMinutes = totalMinutes % 60;\n        let overflowHours = Math.floor(totalMinutes / 60);\n        setTotalTime(`${overflowHours} hours ${overflowMinutes} minutes`);\n        const lineChartData = filteredData.map(item => ({\n          date: item.date,\n          value: convertToMinutes(item.total_hrs)\n        }));\n        const breakLineChartData = filteredData.map(item => ({\n          date: item.date,\n          value: convertToMinutes(item.break)\n        }));\n        const totalLineChartData = filteredData.reduce((acc, item) => {\n          const month = item.date.substring(0, 7);\n          if (!acc[month]) {\n            acc[month] = 0;\n          }\n          acc[month] += convertToMinutes(item.total_hrs);\n          return acc;\n        }, {});\n        const totalBreakLineChartData = filteredData.reduce((acc, item) => {\n          const month = item.date.substring(0, 7);\n          if (!acc[month]) {\n            acc[month] = 0;\n          }\n          acc[month] += convertToMinutes(item.break);\n          return acc;\n        }, {});\n        setLineChartData(lineChartData);\n        setBreakLineChartData(breakLineChartData);\n        setTotalLineChartData(Object.entries(totalLineChartData).map(([month, value]) => ({\n          period: month,\n          value\n        })));\n        setTotalBreakLineChartData(Object.entries(totalBreakLineChartData).map(([month, value]) => ({\n          period: month,\n          value\n        })));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, [selectedEmployee, filterType, filterValue, startDate, endDate]);\n  const handleFilterChange = e => {\n    setFilterType(e.target.value);\n    setFilterValue(''); // Reset filter value when changing type\n    setStartDate('');\n    setEndDate('');\n  };\n  const handleFilterValueChange = e => {\n    setFilterValue(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  const handleEmployeeChange = e => {\n    setSelectedEmployee(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEmployee,\n        onChange: handleEmployeeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: emp.name,\n          children: emp.name\n        }, emp.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), filterType === 'day' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterValue,\n        onChange: handleFilterValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), filterType === 'week' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), filterType === 'month' && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterValue,\n        onChange: handleFilterValueChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-01\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-02\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-03\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-04\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-05\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-06\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-07\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-08\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-09\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"TimeCount\",\n      children: [\"Total Time: \", totalTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EmployeeTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Employees and Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Status Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(statusCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monthly Total Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            totalData: totalLineChartData,\n            title: \"Total Time (Hours)\",\n            showTotalPoint: true,\n            isDefault: filterType === 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monthly Break Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            data: breakLineChartData,\n            totalData: totalBreakLineChartData,\n            title: \"Break Time (Hours)\",\n            showTotalPoint: true,\n            isDefault: filterType === 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(Location, \"UkV9B+ELXohaZhtCLrn1/98mN4g=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","axios","GradientPieChart","LineChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","statusCounts","setStatusCounts","totalTime","setTotalTime","filterType","setFilterType","filterValue","setFilterValue","startDate","setStartDate","endDate","setEndDate","lineChartData","setLineChartData","breakLineChartData","setBreakLineChartData","totalLineChartData","setTotalLineChartData","totalBreakLineChartData","setTotalBreakLineChartData","convertToMinutes","time","hours","decimalMinutes","split","map","Number","minutes","Math","round","fetchData","response","get","csvData","data","uniqueEmployees","Array","from","Set","item","emp_name","department","emp","name","filteredData","filter","date","startsWith","reduce","acc","status","totalMinutes","total_hrs","overflowMinutes","overflowHours","floor","value","break","month","substring","Object","entries","period","error","console","interval","setInterval","clearInterval","handleFilterChange","e","target","handleFilterValueChange","handleStartDateChange","handleEndDateChange","handleEmployeeChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","employee","index","key","totalData","title","showTotalPoint","isDefault","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport LineChart from './LineChart'; // Import the LineChart component\nimport './Location.css';\n\nconst Location = () => {\n    const [employees, setEmployees] = useState([]); // List of all employees with department\n    const [selectedEmployee, setSelectedEmployee] = useState(''); // Selected employee name\n    const [statusCounts, setStatusCounts] = useState({});\n    const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n    const [filterType, setFilterType] = useState('default');\n    const [filterValue, setFilterValue] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [lineChartData, setLineChartData] = useState([]);\n    const [breakLineChartData, setBreakLineChartData] = useState([]);\n    const [totalLineChartData, setTotalLineChartData] = useState([]);\n    const [totalBreakLineChartData, setTotalBreakLineChartData] = useState([]);\n\n    const convertToMinutes = (time) => {\n        const [hours, decimalMinutes] = time.split('.').map(Number);\n        const minutes = Math.round(decimalMinutes);\n        return (hours * 60) + minutes;\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/data');\n                const csvData = response.data;\n\n                // Get unique employee names and their departments\n                const uniqueEmployees = Array.from(new Set(csvData.map(item => `${item.emp_name}:${item.department}`)))\n                    .map(emp => {\n                        const [name, department] = emp.split(':');\n                        return { name, department };\n                    });\n                setEmployees(uniqueEmployees);\n\n                let filteredData = csvData;\n\n                // Apply employee filter\n                if (selectedEmployee) {\n                    filteredData = filteredData.filter(item => item.emp_name === selectedEmployee);\n                }\n\n                // Apply date filters\n                if (filterType === 'day') {\n                    filteredData = filteredData.filter(item => item.date === filterValue);\n                } else if (filterType === 'week') {\n                    filteredData = filteredData.filter(item => item.date >= startDate && item.date <= endDate);\n                } else if (filterType === 'month') {\n                    filteredData = filteredData.filter(item => item.date.startsWith(filterValue));\n                }\n\n                const statusCounts = filteredData.reduce((acc, item) => {\n                    acc[item.status] = (acc[item.status] || 0) + 1;\n                    return acc;\n                }, {});\n                setStatusCounts(statusCounts);\n\n                let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n\n                let overflowMinutes = totalMinutes % 60;\n                let overflowHours = Math.floor(totalMinutes / 60);\n\n                setTotalTime(`${overflowHours} hours ${overflowMinutes} minutes`);\n\n                const lineChartData = filteredData.map(item => ({\n                    date: item.date,\n                    value: convertToMinutes(item.total_hrs)\n                }));\n\n                const breakLineChartData = filteredData.map(item => ({\n                    date: item.date,\n                    value: convertToMinutes(item.break)\n                }));\n\n                const totalLineChartData = filteredData.reduce((acc, item) => {\n                    const month = item.date.substring(0, 7);\n                    if (!acc[month]) {\n                        acc[month] = 0;\n                    }\n                    acc[month] += convertToMinutes(item.total_hrs);\n                    return acc;\n                }, {});\n\n                const totalBreakLineChartData = filteredData.reduce((acc, item) => {\n                    const month = item.date.substring(0, 7);\n                    if (!acc[month]) {\n                        acc[month] = 0;\n                    }\n                    acc[month] += convertToMinutes(item.break);\n                    return acc;\n                }, {});\n\n                setLineChartData(lineChartData);\n                setBreakLineChartData(breakLineChartData);\n                setTotalLineChartData(Object.entries(totalLineChartData).map(([month, value]) => ({ period: month, value })));\n                setTotalBreakLineChartData(Object.entries(totalBreakLineChartData).map(([month, value]) => ({ period: month, value })));\n\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 2000);\n\n        return () => clearInterval(interval);\n    }, [selectedEmployee, filterType, filterValue, startDate, endDate]);\n\n    const handleFilterChange = (e) => {\n        setFilterType(e.target.value);\n        setFilterValue(''); // Reset filter value when changing type\n        setStartDate('');\n        setEndDate('');\n    };\n\n    const handleFilterValueChange = (e) => {\n        setFilterValue(e.target.value);\n    };\n\n    const handleStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    };\n\n    const handleEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    };\n\n    const handleEmployeeChange = (e) => {\n        setSelectedEmployee(e.target.value);\n    };\n\n    return (\n        <div className='Overview-container'>\n            <h1 className='title'>Employee Time Sheet</h1>\n            <div className='filter-container'>\n                <select value={selectedEmployee} onChange={handleEmployeeChange}>\n                    <option value=''>Select Employee</option>\n                    {employees.map(emp => (\n                        <option key={emp.name} value={emp.name}>{emp.name}</option>\n                    ))}\n                </select>\n                <select value={filterType} onChange={handleFilterChange}>\n                    <option value='default'>Default</option>\n                    <option value='day'>Day</option>\n                    <option value='week'>Week</option>\n                    <option value='month'>Month</option>\n                </select>\n\n                {filterType === 'day' && (\n                    <input\n                        type='date'\n                        value={filterValue}\n                        onChange={handleFilterValueChange}\n                    />\n                )}\n\n                {filterType === 'week' && (\n                    <>\n                        <input\n                            type='date'\n                            value={startDate}\n                            onChange={handleStartDateChange}\n                        />\n                        <input\n                            type='date'\n                            value={endDate}\n                            onChange={handleEndDateChange}\n                        />\n                    </>\n                )}\n\n                {filterType === 'month' && (\n                    <select value={filterValue} onChange={handleFilterValueChange}>\n                        <option value='2024-01'>January</option>\n                        <option value='2024-02'>February</option>\n                        <option value='2024-03'>March</option>\n                        <option value='2024-04'>April</option>\n                        <option value='2024-05'>May</option>\n                        <option value='2024-06'>June</option>\n                        <option value='2024-07'>July</option>\n                        <option value='2024-08'>August</option>\n                        <option value='2024-09'>September</option>\n                        <option value='2024-10'>October</option>\n                        <option value='2024-11'>November</option>\n                        <option value='2024-12'>December</option>\n                    </select>\n                )}\n            </div>\n\n            <p className='TimeCount'>Total Time: {totalTime}</p>\n\n            <div className='final-container'>\n                <div className='EmployeeTable'>\n                    <h2>Employees and Departments</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Employee Name</th>\n                                <th>Department</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map((employee, index) => (\n                                <tr key={index}>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.department}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='chart-container'>\n                    <div className='chart1'>\n                        <h2>Status Breakdown</h2>\n                        <GradientPieChart\n                            data={Object.entries(statusCounts).map(([key, value]) => ({ name: key, value }))}\n                        />\n                    </div>\n                </div>\n\n            </div>\n\n            <div className='final-container1'>\n                <div className='chart-container1'>\n                    <div className='line-chart1'>\n                        <h2>Monthly Total Time</h2>\n                        <LineChart\n                            data={lineChartData}\n                            totalData={totalLineChartData}\n                            title=\"Total Time (Hours)\"\n                            showTotalPoint={true}\n                            isDefault={filterType === 'default'}\n                        />\n                    </div>\n                    <div className='line-chart1'>\n                        <h2>Monthly Break Time</h2>\n                        <LineChart\n                            data={breakLineChartData}\n                            totalData={totalBreakLineChartData}\n                            title=\"Break Time (Hours)\"\n                            showTotalPoint={true}\n                            isDefault={filterType === 'default'}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Location;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}