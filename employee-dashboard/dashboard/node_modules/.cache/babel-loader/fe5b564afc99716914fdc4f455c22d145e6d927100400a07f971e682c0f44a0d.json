{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/BarChart.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  data,\n  secondaryData,\n  title,\n  columnWidth = '60%',\n  text = 'Number of Employees'\n}) => {\n  const categories = data.map(item => item.name);\n  const primarySeriesData = data.map(item => item.value);\n  const secondarySeriesData = secondaryData.map(item => item.value);\n  const dynamicHeight = Math.max(400, data.length * 20);\n  const options = {\n    chart: {\n      type: 'bar',\n      height: dynamicHeight\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: columnWidth\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories,\n      labels: {\n        rotate: -45,\n        maxHeight: 100,\n        style: {\n          fontSize: '10px'\n        },\n        formatter: function (value) {\n          return value.length > 10 ? value.substring(0, 10) + '...' : value;\n        }\n      },\n      tooltip: {\n        enabled: false\n      }\n    },\n    yaxis: [{\n      title: {\n        text: text\n      },\n      labels: {\n        formatter: val => Math.round(val) // Ensure integers on the main y-axis\n      }\n    }, {\n      opposite: true,\n      // Place secondary y-axis on the right\n      title: {\n        text: 'Other Metric'\n      },\n      labels: {\n        formatter: val => Math.round(val) // Ensure integers on the secondary y-axis\n      }\n    }],\n    title: {\n      text: title,\n      align: 'center',\n      style: {\n        fontSize: '18px'\n      }\n    },\n    fill: {\n      colors: ['#008FFB', '#00E396']\n    },\n    tooltip: {\n      enabled: true,\n      y: {\n        formatter: function (val, opts) {\n          const fullLabel = categories[opts.dataPointIndex];\n          return `${fullLabel}: ${Math.round(val)} employees`;\n        }\n      }\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false\n        }\n      }\n    }\n  };\n  const series = [{\n    name: 'Primary Data',\n    data: primarySeriesData\n  }, {\n    name: 'Secondary Data',\n    data: secondarySeriesData,\n    type: 'line' // You can choose bar, line, or other types for the secondary series\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: dynamicHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","BarChart","data","secondaryData","title","columnWidth","text","categories","map","item","name","primarySeriesData","value","secondarySeriesData","dynamicHeight","Math","max","length","options","chart","type","height","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","labels","rotate","maxHeight","style","fontSize","formatter","substring","tooltip","yaxis","val","round","opposite","align","fill","colors","y","opts","fullLabel","dataPointIndex","grid","lines","show","series","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/BarChart.js"],"sourcesContent":["import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst BarChart = ({ data, secondaryData, title, columnWidth = '60%', text = 'Number of Employees' }) => {\n  const categories = data.map(item => item.name);\n  const primarySeriesData = data.map(item => item.value);\n  const secondarySeriesData = secondaryData.map(item => item.value);\n\n  const dynamicHeight = Math.max(400, data.length * 20);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: dynamicHeight,\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: columnWidth,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    xaxis: {\n      categories,\n      labels: {\n        rotate: -45,\n        maxHeight: 100,\n        style: {\n          fontSize: '10px',\n        },\n        formatter: function (value) {\n          return value.length > 10 ? value.substring(0, 10) + '...' : value;\n        },\n      },\n      tooltip: {\n        enabled: false,\n      },\n    },\n    yaxis: [\n      {\n        title: {\n          text: text,\n        },\n        labels: {\n          formatter: (val) => Math.round(val), // Ensure integers on the main y-axis\n        },\n      },\n      {\n        opposite: true,  // Place secondary y-axis on the right\n        title: {\n          text: 'Other Metric',\n        },\n        labels: {\n          formatter: (val) => Math.round(val),  // Ensure integers on the secondary y-axis\n        },\n      },\n    ],\n    title: {\n      text: title,\n      align: 'center',\n      style: {\n        fontSize: '18px',\n      },\n    },\n    fill: {\n      colors: ['#008FFB', '#00E396'],\n    },\n    tooltip: {\n      enabled: true,\n      y: {\n        formatter: function (val, opts) {\n          const fullLabel = categories[opts.dataPointIndex];\n          return `${fullLabel}: ${Math.round(val)} employees`;\n        },\n      },\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false,\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      name: 'Primary Data',\n      data: primarySeriesData,\n    },\n    {\n      name: 'Secondary Data',\n      data: secondarySeriesData,\n      type: 'line', // You can choose bar, line, or other types for the secondary series\n    },\n  ];\n\n  return (\n    <div className=\"chart\">\n      <ReactApexChart options={options} series={series} type=\"bar\" height={dynamicHeight} />\n    </div>\n  );\n};\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}