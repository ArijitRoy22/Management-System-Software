{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n  const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n  const [filterType, setFilterType] = useState('default');\n  const [filterValue, setFilterValue] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [lineChartData, setLineChartData] = useState({\n    totalHrs: [],\n    breakTime: []\n  });\n  const convertToMinutes = time => {\n    const [hours, decimalMinutes] = time.split('.').map(Number);\n    const minutes = Math.round(decimalMinutes);\n    return hours * 60 + minutes;\n  };\n  const calculateTotalTime = filteredData => {\n    let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n    let overflowMinutes = totalMinutes % 60;\n    let overflowHours = Math.floor(totalMinutes / 60);\n    return `${overflowHours} hours ${overflowMinutes} minutes`;\n  };\n  const aggregateDataByMonth = (data, field) => {\n    return data.reduce((acc, item) => {\n      const month = item.date.slice(0, 7); // Extract the month in 'YYYY-MM' format\n      if (!acc[month]) acc[month] = 0;\n      acc[month] += convertToMinutes(item[field]);\n      return acc;\n    }, {});\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n        let filteredData = csvData;\n        if (filterType === 'day') {\n          filteredData = csvData.filter(item => item.date === filterValue);\n        } else if (filterType === 'week') {\n          filteredData = csvData.filter(item => item.date >= startDate && item.date <= endDate);\n        } else if (filterType === 'month') {\n          filteredData = csvData.filter(item => item.date.startsWith(filterValue));\n        }\n        const statusCounts = filteredData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n        setTotalTime(calculateTotalTime(filteredData));\n        const totalHrsByMonth = aggregateDataByMonth(filteredData, 'total_hrs');\n        const breakTimeByMonth = aggregateDataByMonth(filteredData, 'break');\n        setLineChartData({\n          totalHrs: Object.entries(totalHrsByMonth).map(([month, minutes]) => ({\n            month,\n            value: minutes / 60 // Convert back to hours for display\n          })),\n          breakTime: Object.entries(breakTimeByMonth).map(([month, minutes]) => ({\n            month,\n            value: minutes / 60 // Convert back to hours for display\n          }))\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, [filterType, filterValue, startDate, endDate]);\n  const handleFilterChange = e => {\n    setFilterType(e.target.value);\n    setFilterValue(' '); // Reset filter value when changing type\n    setStartDate('');\n    setEndDate('');\n  };\n  const handleFilterValueChange = e => {\n    setFilterValue(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), filterType === 'day' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterValue,\n        onChange: handleFilterValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), filterType === 'week' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), filterType === 'month' && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterValue,\n        onChange: handleFilterValueChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-01\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-02\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-03\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-04\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-05\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-06\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-07\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-08\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-09\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024-12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"EmployeeCount\",\n        children: [\"Total Number of Employees: \", totalEmployees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TimeCount\",\n        children: [\"Total Time: \", totalTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Status Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(statusCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Department Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(departmentCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Total Hours by Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: lineChartData.totalHrs.map(item => item.month),\n              datasets: [{\n                label: 'Total Hours',\n                data: lineChartData.totalHrs.map(item => item.value),\n                fill: false,\n                borderColor: 'rgba(75,192,192,1)',\n                tension: 0.1\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Break Time by Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: lineChartData.breakTime.map(item => item.month),\n              datasets: [{\n                label: 'Break Time',\n                data: lineChartData.breakTime.map(item => item.value),\n                fill: false,\n                borderColor: 'rgba(255,99,132,1)',\n                tension: 0.1\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(Overview, \"wmD+w2lL+uEco+3SN3y844gUciU=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","GradientPieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Overview","_s","totalEmployees","setTotalEmployees","departmentCounts","setDepartmentCounts","statusCounts","setStatusCounts","totalTime","setTotalTime","filterType","setFilterType","filterValue","setFilterValue","startDate","setStartDate","endDate","setEndDate","lineChartData","setLineChartData","totalHrs","breakTime","convertToMinutes","time","hours","decimalMinutes","split","map","Number","minutes","Math","round","calculateTotalTime","filteredData","totalMinutes","reduce","acc","item","total_hrs","overflowMinutes","overflowHours","floor","aggregateDataByMonth","data","field","month","date","slice","fetchData","response","get","csvData","uniqueNames","Set","emp_name","size","deptCounts","department","add","departmentCountMap","Object","keys","filter","startsWith","status","totalHrsByMonth","breakTimeByMonth","entries","value","error","console","interval","setInterval","clearInterval","handleFilterChange","e","target","handleFilterValueChange","handleStartDateChange","handleEndDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","key","name","labels","datasets","label","fill","borderColor","tension","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport './Overview.css';\n\nconst Overview = () => {\n    const [totalEmployees, setTotalEmployees] = useState(0);\n    const [departmentCounts, setDepartmentCounts] = useState({});\n    const [statusCounts, setStatusCounts] = useState({});\n    const [totalTime, setTotalTime] = useState('0 hours 0 minutes');\n    const [filterType, setFilterType] = useState('default');\n    const [filterValue, setFilterValue] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [lineChartData, setLineChartData] = useState({ totalHrs: [], breakTime: [] });\n\n    const convertToMinutes = (time) => {\n        const [hours, decimalMinutes] = time.split('.').map(Number);\n        const minutes = Math.round(decimalMinutes);\n        return (hours * 60) + minutes;\n    };\n\n    const calculateTotalTime = (filteredData) => {\n        let totalMinutes = filteredData.reduce((acc, item) => acc + convertToMinutes(item.total_hrs), 0);\n        let overflowMinutes = totalMinutes % 60;\n        let overflowHours = Math.floor(totalMinutes / 60);\n        return `${overflowHours} hours ${overflowMinutes} minutes`;\n    };\n\n    const aggregateDataByMonth = (data, field) => {\n        return data.reduce((acc, item) => {\n            const month = item.date.slice(0, 7); // Extract the month in 'YYYY-MM' format\n            if (!acc[month]) acc[month] = 0;\n            acc[month] += convertToMinutes(item[field]);\n            return acc;\n        }, {});\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/data');\n                const csvData = response.data;\n\n                const uniqueNames = new Set(csvData.map(item => item.emp_name));\n                setTotalEmployees(uniqueNames.size);\n\n                const deptCounts = csvData.reduce((acc, item) => {\n                    if (!acc[item.department]) {\n                        acc[item.department] = new Set();\n                    }\n                    acc[item.department].add(item.emp_name);\n                    return acc;\n                }, {});\n                const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n                    acc[department] = deptCounts[department].size;\n                    return acc;\n                }, {});\n                setDepartmentCounts(departmentCountMap);\n\n                let filteredData = csvData;\n                if (filterType === 'day') {\n                    filteredData = csvData.filter(item => item.date === filterValue);\n                } else if (filterType === 'week') {\n                    filteredData = csvData.filter(item => item.date >= startDate && item.date <= endDate);\n                } else if (filterType === 'month') {\n                    filteredData = csvData.filter(item => item.date.startsWith(filterValue));\n                }\n\n                const statusCounts = filteredData.reduce((acc, item) => {\n                    acc[item.status] = (acc[item.status] || 0) + 1;\n                    return acc;\n                }, {});\n                setStatusCounts(statusCounts);\n\n                setTotalTime(calculateTotalTime(filteredData));\n\n                const totalHrsByMonth = aggregateDataByMonth(filteredData, 'total_hrs');\n                const breakTimeByMonth = aggregateDataByMonth(filteredData, 'break');\n\n                setLineChartData({\n                    totalHrs: Object.entries(totalHrsByMonth).map(([month, minutes]) => ({\n                        month,\n                        value: minutes / 60 // Convert back to hours for display\n                    })),\n                    breakTime: Object.entries(breakTimeByMonth).map(([month, minutes]) => ({\n                        month,\n                        value: minutes / 60 // Convert back to hours for display\n                    })),\n                });\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 2000);\n\n        return () => clearInterval(interval);\n    }, [filterType, filterValue, startDate, endDate]);\n\n    const handleFilterChange = (e) => {\n        setFilterType(e.target.value);\n        setFilterValue(' '); // Reset filter value when changing type\n        setStartDate('');\n        setEndDate('');\n    };\n\n    const handleFilterValueChange = (e) => {\n        setFilterValue(e.target.value);\n    };\n\n    const handleStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    };\n\n    const handleEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    };\n\n    return (\n        <div className='Overview-container'>\n            <h1>Employee Time Sheet</h1>\n            <div className='filter-container'>\n                <select value={filterType} onChange={handleFilterChange}>\n                    <option value='default'>Default</option>\n                    <option value='day'>Day</option>\n                    <option value='week'>Week</option>\n                    <option value='month'>Month</option>\n                </select>\n\n                {filterType === 'day' && (\n                    <input\n                        type='date'\n                        value={filterValue}\n                        onChange={handleFilterValueChange}\n                    />\n                )}\n\n                {filterType === 'week' && (\n                    <>\n                        <input\n                            type='date'\n                            value={startDate}\n                            onChange={handleStartDateChange}\n                        />\n                        <input\n                            type='date'\n                            value={endDate}\n                            onChange={handleEndDateChange}\n                        />\n                    </>\n                )}\n\n                {filterType === 'month' && (\n                    <select value={filterValue} onChange={handleFilterValueChange}>\n                        <option value='2024-01'>January</option>\n                        <option value='2024-02'>February</option>\n                        <option value='2024-03'>March</option>\n                        <option value='2024-04'>April</option>\n                        <option value='2024-05'>May</option>\n                        <option value='2024-06'>June</option>\n                        <option value='2024-07'>July</option>\n                        <option value='2024-08'>August</option>\n                        <option value='2024-09'>September</option>\n                        <option value='2024-10'>October</option>\n                        <option value='2024-11'>November</option>\n                        <option value='2024-12'>December</option>\n                    </select>\n                )}\n            </div>\n\n            <div className='counts-container'>\n                <p className='EmployeeCount'>Total Number of Employees: {totalEmployees}</p>\n                <p className='TimeCount'>Total Time: {totalTime}</p>\n            </div>\n\n            <div className='final-container'>\n                <div className='chart-container'>\n                    <div className='chart1'>\n                        <h2>Status Breakdown</h2>\n                        <GradientPieChart\n                            data={Object.entries(statusCounts).map(([key, value]) => ({ name: key, value }))}\n                        />\n                    </div>\n                </div>\n\n                <div className='chart-container'>\n                    <div className='chart2'>\n                        <h2>Department Breakdown</h2>\n                        <GradientPieChart\n                            data={Object.entries(departmentCounts).map(([key, value]) => ({ name: key, value }))}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className='line-chart-container'>\n                <div className='chart-container'>\n                    <div className='chart1'>\n                        <h2>Total Hours by Month</h2>\n                        <Line\n                            data={{\n                                labels: lineChartData.totalHrs.map(item => item.month),\n                                datasets: [\n                                    {\n                                        label: 'Total Hours',\n                                        data: lineChartData.totalHrs.map(item => item.value),\n                                        fill: false,\n                                        borderColor: 'rgba(75,192,192,1)',\n                                        tension: 0.1,\n                                    }\n                                ],\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className='chart-container'>\n                    <div className='chart2'>\n                        <h2>Break Time by Month</h2>\n                        <Line\n                            data={{\n                                labels: lineChartData.breakTime.map(item => item.month),\n                                datasets: [\n                                    {\n                                        label: 'Break Time',\n                                        data: lineChartData.breakTime.map(item => item.value),\n                                        fill: false,\n                                        borderColor: 'rgba(255,99,132,1)',\n                                        tension: 0.1,\n                                    }\n                                ],\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}