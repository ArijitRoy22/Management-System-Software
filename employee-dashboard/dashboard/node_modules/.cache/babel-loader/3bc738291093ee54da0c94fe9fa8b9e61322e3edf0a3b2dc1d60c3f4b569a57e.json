{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js\";\n// GradientPieChart.js\n// import React from 'react';\n// import ReactApexChart from 'react-apexcharts';\n\n// const GradientPieChart = ({ data, title }) => {\n//   const series = data.map(item => item.value);\n//   const labels = data.map(item => item.name);\n\n//   const options = {\n//     chart: {\n//       type: 'donut',\n//     },\n//     plotOptions: {\n//       pie: {\n//         startAngle: -90,\n//         endAngle: 270,\n//         donut: {\n//           size: '70%',\n//           background: 'transparent',\n//         },\n//       },\n//     },\n//     fill: {\n//       type: 'gradient',\n//     },\n//     dataLabels: {\n//       enabled: false,\n\n//     },\n//     legend: {\n//       position: 'bottom',\n//       formatter: function(val, opts) {\n//         return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\n//       }\n//     },\n//     labels,\n//   };\n\n//   return (\n//     <div className=\"chart\">\n//       <ReactApexChart options={options} series={series} type=\"donut\" height={400} />\n//     </div>\n//   );\n// };\n\n// export default GradientPieChart;\n\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradientPieChart = ({\n  data,\n  title\n}) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n\n  // Define a custom color palette to ensure uniqueness\n  const colors = ['#008FFB',\n  // Blue\n  '#00E396',\n  // Green\n  '#FEB019',\n  // Yellow\n  '#FF4560',\n  // Red\n  '#775DD0',\n  // Purple\n  '#66DA26',\n  // Lime green\n  '#66EB27',\n  // Lime green\n  '#66FC28' // Lime green\n  ];\n  const options = {\n    chart: {\n      type: 'donut'\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent'\n        }\n      }\n    },\n    fill: {\n      type: 'gradient'\n    },\n    colors,\n    // Apply the custom color palette here\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      }\n    },\n    labels\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"donut\",\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c = GradientPieChart;\nexport default GradientPieChart;\nvar _c;\n$RefreshReg$(_c, \"GradientPieChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","GradientPieChart","data","title","series","map","item","value","labels","name","colors","options","chart","type","plotOptions","pie","startAngle","endAngle","donut","size","background","fill","dataLabels","enabled","legend","position","formatter","val","opts","w","globals","seriesIndex","className","children","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/GradientPieChart.js"],"sourcesContent":["// GradientPieChart.js\n// import React from 'react';\n// import ReactApexChart from 'react-apexcharts';\n\n// const GradientPieChart = ({ data, title }) => {\n//   const series = data.map(item => item.value);\n//   const labels = data.map(item => item.name);\n\n//   const options = {\n//     chart: {\n//       type: 'donut',\n//     },\n//     plotOptions: {\n//       pie: {\n//         startAngle: -90,\n//         endAngle: 270,\n//         donut: {\n//           size: '70%',\n//           background: 'transparent',\n//         },\n//       },\n//     },\n//     fill: {\n//       type: 'gradient',\n//     },\n//     dataLabels: {\n//       enabled: false,\n      \n//     },\n//     legend: {\n//       position: 'bottom',\n//       formatter: function(val, opts) {\n//         return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\n//       }\n//     },\n//     labels,\n//   };\n\n//   return (\n//     <div className=\"chart\">\n//       <ReactApexChart options={options} series={series} type=\"donut\" height={400} />\n//     </div>\n//   );\n// };\n\n// export default GradientPieChart;\n\n\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst GradientPieChart = ({ data, title }) => {\n  const series = data.map(item => item.value);\n  const labels = data.map(item => item.name);\n\n  // Define a custom color palette to ensure uniqueness\n  const colors = [\n    '#008FFB', // Blue\n    '#00E396', // Green\n    '#FEB019', // Yellow\n    '#FF4560', // Red\n    '#775DD0', // Purple\n    '#66DA26', // Lime green\n    '#66EB27', // Lime green\n    '#66FC28', // Lime green\n  ];\n\n  const options = {\n    chart: {\n      type: 'donut',\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n        donut: {\n          size: '70%',\n          background: 'transparent',\n        },\n      },\n    },\n    fill: {\n      type: 'gradient',\n    },\n    colors,  // Apply the custom color palette here\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      position: 'bottom',\n      formatter: function (val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      },\n    },\n    labels,\n  };\n\n  return (\n    <div className=\"chart\">\n      <ReactApexChart options={options} series={series} type=\"donut\" height={400} />\n    </div>\n  );\n};\n\nexport default GradientPieChart;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAC5C,MAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EAC3C,MAAMC,MAAM,GAAGN,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,CAAC;;EAE1C;EACA,MAAMC,MAAM,GAAG,CACb,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACZ;EAED,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,UAAU,EAAE,CAAC,EAAE;QACfC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UACXC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACDC,IAAI,EAAE;MACJR,IAAI,EAAE;IACR,CAAC;IACDH,MAAM;IAAG;IACTY,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;QAC9B,OAAOD,GAAG,GAAG,KAAK,GAAGC,IAAI,CAACC,CAAC,CAACC,OAAO,CAAC1B,MAAM,CAACwB,IAAI,CAACG,WAAW,CAAC;MAC9D;IACF,CAAC;IACDvB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBjC,OAAA,CAACF,cAAc;MAACa,OAAO,EAAEA,OAAQ;MAACP,MAAM,EAAEA,MAAO;MAACS,IAAI,EAAC,OAAO;MAACqB,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACC,EAAA,GAnDItC,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}