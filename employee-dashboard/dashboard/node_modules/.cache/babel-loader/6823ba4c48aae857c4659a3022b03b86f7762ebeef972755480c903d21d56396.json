{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          acc[item.department] = (acc[item.department] || 0) + 1;\n          return acc;\n        }, {});\n        setDepartmentCounts(deptCounts);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Pie chart colors\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Number of Employees: \", totalEmployees]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Status Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 600,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: Object.entries(statusCounts).map(([key, value]) => ({\n              name: key,\n              value\n            })),\n            dataKey: \"value\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            label: true,\n            children: Object.keys(statusCounts).map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, entry, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Department Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 600,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: Object.entries(departmentCounts).map(([key, value]) => ({\n              name: key,\n              value\n            })),\n            dataKey: \"value\",\n            cx: \"50%\",\n            cy: 200,\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            label: true,\n            children: Object.keys(departmentCounts).map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, entry, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"coYtyYz8orwfsy3CM+FrtoDB4g4=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","PieChart","Pie","Cell","Legend","Tooltip","jsxDEV","_jsxDEV","Overview","_s","totalEmployees","setTotalEmployees","departmentCounts","setDepartmentCounts","statusCounts","setStatusCounts","fetchData","response","get","csvData","data","uniqueNames","Set","map","item","emp_name","size","deptCounts","reduce","acc","department","status","error","console","interval","setInterval","clearInterval","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","Object","entries","key","value","name","dataKey","cx","cy","outerRadius","fill","label","keys","entry","index","length","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport './Overview.css'; \n\nconst Overview = () => {\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          acc[item.department] = (acc[item.department] || 0) + 1;\n          return acc;\n        }, {});\n        setDepartmentCounts(deptCounts);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Pie chart colors\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <div className='Overview-container'>\n      <h1>Employee Time Sheet</h1>\n      <p>Total Number of Employees: {totalEmployees}</p>\n      \n      <div className='chart-container'>\n        <div className='chart1'>\n            <h2>Status Breakdown</h2>\n            <PieChart width={600} height={400}>\n            <Pie\n                data={Object.entries(statusCounts).map(([key, value]) => ({ name: key, value }))}\n                dataKey=\"value\"\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={150}\n                fill=\"#8884d8\"\n                label\n            >\n                {Object.keys(statusCounts).map((entry, index) => (\n                <Cell key={entry} fill={COLORS[index % COLORS.length]} />\n                ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n            </PieChart>\n        </div>\n\n        <div className='chart2'>\n            <h2>Department Breakdown</h2>\n            <PieChart width={600} height={400}>\n            <Pie\n                data={Object.entries(departmentCounts).map(([key, value]) => ({ name: key, value }))}\n                dataKey=\"value\"\n                cx=\"50%\"\n                cy={200}\n                outerRadius={150}\n                fill=\"#8884d8\"\n                label\n            >\n                {Object.keys(departmentCounts).map((entry, index) => (\n                <Cell key={entry} fill={COLORS[index % COLORS.length]} />\n                ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n            </PieChart>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}