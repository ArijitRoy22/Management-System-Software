{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport './Overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n  const [totalHours, setTotalHours] = useState({\n    hours: 0,\n    minutes: 0\n  });\n  const convertToHoursAndMinutes = time => {\n    const [hours, minutes] = time.toString().split('.').map(Number);\n    const totalMinutes = Math.round((minutes || 0) * 0.6);\n    return {\n      hours,\n      minutes: totalMinutes\n    };\n  };\n  const calculateTotalHours = times => {\n    let totalMinutes = 0;\n    let totalHours = 0;\n    times.forEach(time => {\n      const [hours, minutes] = time.toString().split('.').map(Number);\n      totalHours += hours;\n      totalMinutes += Math.round((minutes || 0) * 0.6);\n    });\n\n    // Convert minutes to hours if totalMinutes >= 60\n    if (totalMinutes >= 60) {\n      const extraHours = Math.floor(totalMinutes / 60);\n      totalHours += extraHours;\n      totalMinutes = totalMinutes % 60;\n    }\n    setTotalHours({\n      hours: totalHours,\n      minutes: totalMinutes\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count unique departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n\n        // Calculate total hours\n        const times = csvData.map(item => parseFloat(item.total_hrs));\n        calculateTotalHours(times);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"EmployeeCount\",\n        children: [\"Total Number of Employees: \", totalEmployees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TimeCount\",\n        children: [\"Total Time: \", totalHours.hours, \" hours \", totalHours.minutes, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Status Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(statusCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Department Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GradientPieChart, {\n            data: Object.entries(departmentCounts).map(([key, value]) => ({\n              name: key,\n              value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"QNRESJYmE+Gvu68JXCD6yPaxYhk=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","axios","GradientPieChart","jsxDEV","_jsxDEV","Overview","_s","totalEmployees","setTotalEmployees","departmentCounts","setDepartmentCounts","statusCounts","setStatusCounts","totalHours","setTotalHours","hours","minutes","convertToHoursAndMinutes","time","toString","split","map","Number","totalMinutes","Math","round","calculateTotalHours","times","forEach","extraHours","floor","fetchData","response","get","csvData","data","uniqueNames","Set","item","emp_name","size","deptCounts","reduce","acc","department","add","departmentCountMap","Object","keys","status","parseFloat","total_hrs","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","key","value","name","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Overview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GradientPieChart from './GradientPieChart'; // Import the new GradientPieChart component\nimport './Overview.css'; \n\nconst Overview = () => {\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  const [departmentCounts, setDepartmentCounts] = useState({});\n  const [statusCounts, setStatusCounts] = useState({});\n  const [totalHours, setTotalHours] = useState({ hours: 0, minutes: 0 });\n\n  const convertToHoursAndMinutes = (time) => {\n    const [hours, minutes] = time.toString().split('.').map(Number);\n    const totalMinutes = Math.round((minutes || 0) * 0.6);\n    return { hours, minutes: totalMinutes };\n  };\n\n  const calculateTotalHours = (times) => {\n    let totalMinutes = 0;\n    let totalHours = 0;\n\n    times.forEach(time => {\n      const [hours, minutes] = time.toString().split('.').map(Number);\n      totalHours += hours;\n      totalMinutes += Math.round((minutes || 0) * 0.6);\n    });\n\n    // Convert minutes to hours if totalMinutes >= 60\n    if (totalMinutes >= 60) {\n      const extraHours = Math.floor(totalMinutes / 60);\n      totalHours += extraHours;\n      totalMinutes = totalMinutes % 60;\n    }\n\n    setTotalHours({ hours: totalHours, minutes: totalMinutes });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/data');\n        const csvData = response.data;\n\n        // Count unique employees\n        const uniqueNames = new Set(csvData.map(item => item.emp_name));\n        setTotalEmployees(uniqueNames.size);\n\n        // Count unique departments\n        const deptCounts = csvData.reduce((acc, item) => {\n          if (!acc[item.department]) {\n            acc[item.department] = new Set();\n          }\n          acc[item.department].add(item.emp_name);\n          return acc;\n        }, {});\n        const departmentCountMap = Object.keys(deptCounts).reduce((acc, department) => {\n          acc[department] = deptCounts[department].size;\n          return acc;\n        }, {});\n        setDepartmentCounts(departmentCountMap);\n\n        // Count status\n        const statusCounts = csvData.reduce((acc, item) => {\n          acc[item.status] = (acc[item.status] || 0) + 1;\n          return acc;\n        }, {});\n        setStatusCounts(statusCounts);\n\n        // Calculate total hours\n        const times = csvData.map(item => parseFloat(item.total_hrs));\n        calculateTotalHours(times);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 2000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className='Overview-container'>\n        <h1>Employee Time Sheet</h1>\n        <div className='counts-container'>\n            <p className='EmployeeCount'>Total Number of Employees: {totalEmployees}</p>\n            <p className='TimeCount'>Total Time: {totalHours.hours} hours {totalHours.minutes} minutes</p>\n        </div>\n\n        <div className='final-container'>\n            <div className='chart-container'>\n                <div className='chart1'>\n                    <h2>Status Breakdown</h2>  \n                    <GradientPieChart\n                        data={Object.entries(statusCounts).map(([key, value]) => ({ name: key, value }))}\n                    />\n                </div>\n            </div>\n\n            <div className='chart-container'> \n                <div className='chart2'>\n                    <h1>Department Breakdown</h1>\n                    <GradientPieChart\n                        data={Object.entries(departmentCounts).map(([key, value]) => ({ name: key, value }))}\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AACnD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAEtE,MAAMC,wBAAwB,GAAIC,IAAI,IAAK;IACzC,MAAM,CAACH,KAAK,EAAEC,OAAO,CAAC,GAAGE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAC/D,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACT,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC;IACrD,OAAO;MAAED,KAAK;MAAEC,OAAO,EAAEO;IAAa,CAAC;EACzC,CAAC;EAED,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAIJ,YAAY,GAAG,CAAC;IACpB,IAAIV,UAAU,GAAG,CAAC;IAElBc,KAAK,CAACC,OAAO,CAACV,IAAI,IAAI;MACpB,MAAM,CAACH,KAAK,EAAEC,OAAO,CAAC,GAAGE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAC/DT,UAAU,IAAIE,KAAK;MACnBQ,YAAY,IAAIC,IAAI,CAACC,KAAK,CAAC,CAACT,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC;IAClD,CAAC,CAAC;;IAEF;IACA,IAAIO,YAAY,IAAI,EAAE,EAAE;MACtB,MAAMM,UAAU,GAAGL,IAAI,CAACM,KAAK,CAACP,YAAY,GAAG,EAAE,CAAC;MAChDV,UAAU,IAAIgB,UAAU;MACxBN,YAAY,GAAGA,YAAY,GAAG,EAAE;IAClC;IAEAT,aAAa,CAAC;MAAEC,KAAK,EAAEF,UAAU;MAAEG,OAAO,EAAEO;IAAa,CAAC,CAAC;EAC7D,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,4BAA4B,CAAC;QAC9D,MAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAI;;QAE7B;QACA,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAACH,OAAO,CAACb,GAAG,CAACiB,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,CAAC;QAC/D/B,iBAAiB,CAAC4B,WAAW,CAACI,IAAI,CAAC;;QAEnC;QACA,MAAMC,UAAU,GAAGP,OAAO,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEL,IAAI,KAAK;UAC/C,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC,EAAE;YACzBD,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC,GAAG,IAAIP,GAAG,CAAC,CAAC;UAClC;UACAM,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC,CAACC,GAAG,CAACP,IAAI,CAACC,QAAQ,CAAC;UACvC,OAAOI,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,MAAMG,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAK;UAC7ED,GAAG,CAACC,UAAU,CAAC,GAAGH,UAAU,CAACG,UAAU,CAAC,CAACJ,IAAI;UAC7C,OAAOG,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACNjC,mBAAmB,CAACoC,kBAAkB,CAAC;;QAEvC;QACA,MAAMnC,YAAY,GAAGuB,OAAO,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEL,IAAI,KAAK;UACjDK,GAAG,CAACL,IAAI,CAACW,MAAM,CAAC,GAAG,CAACN,GAAG,CAACL,IAAI,CAACW,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;UAC9C,OAAON,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACN/B,eAAe,CAACD,YAAY,CAAC;;QAE7B;QACA,MAAMgB,KAAK,GAAGO,OAAO,CAACb,GAAG,CAACiB,IAAI,IAAIY,UAAU,CAACZ,IAAI,CAACa,SAAS,CAAC,CAAC;QAC7DzB,mBAAmB,CAACC,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDrB,SAAS,CAAC,CAAC;IACX,MAAMuB,QAAQ,GAAGC,WAAW,CAACxB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;;IAE/C,OAAO,MAAMyB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElD,OAAA;IAAKqD,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BtD,OAAA;MAAAsD,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B1D,OAAA;MAAKqD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BtD,OAAA;QAAGqD,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,6BAA2B,EAACnD,cAAc;MAAA;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5E1D,OAAA;QAAGqD,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,cAAY,EAAC7C,UAAU,CAACE,KAAK,EAAC,SAAO,EAACF,UAAU,CAACG,OAAO,EAAC,UAAQ;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC,eAEN1D,OAAA;MAAKqD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtD,OAAA;QAAKqD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BtD,OAAA;UAAKqD,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBACnBtD,OAAA;YAAAsD,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB1D,OAAA,CAACF,gBAAgB;YACbiC,IAAI,EAAEY,MAAM,CAACgB,OAAO,CAACpD,YAAY,CAAC,CAACU,GAAG,CAAC,CAAC,CAAC2C,GAAG,EAAEC,KAAK,CAAC,MAAM;cAAEC,IAAI,EAAEF,GAAG;cAAEC;YAAM,CAAC,CAAC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN1D,OAAA;QAAKqD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BtD,OAAA;UAAKqD,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBACnBtD,OAAA;YAAAsD,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7B1D,OAAA,CAACF,gBAAgB;YACbiC,IAAI,EAAEY,MAAM,CAACgB,OAAO,CAACtD,gBAAgB,CAAC,CAACY,GAAG,CAAC,CAAC,CAAC2C,GAAG,EAAEC,KAAK,CAAC,MAAM;cAAEC,IAAI,EAAEF,GAAG;cAAEC;YAAM,CAAC,CAAC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACxD,EAAA,CA1GID,QAAQ;AAAA8D,EAAA,GAAR9D,QAAQ;AA4Gd,eAAeA,QAAQ;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}