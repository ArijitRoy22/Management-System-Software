{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport * as L from 'leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport mapboxgl from 'mapbox-gl';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'YOUR_MAPBOX_API_KEY'; // Add your Mapbox API key here\n\nconst SearchField = () => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const provider = new OpenStreetMapProvider();\n    const searchControl = new GeoSearchControl({\n      provider,\n      style: 'bar',\n      showMarker: true,\n      retainZoomLevel: false,\n      animateZoom: true,\n      autoClose: true,\n      searchLabel: 'Enter address'\n    });\n    map.addControl(searchControl);\n    return () => map.removeControl(searchControl);\n  }, [map]);\n  return null;\n};\n_s(SearchField, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = SearchField;\nconst Location = () => {\n  _s2();\n  const [leavesData, setLeavesData] = useState([]);\n  const [geoData, setGeoData] = useState([]);\n  useEffect(() => {\n    const fetchLeavesData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched data:', data);\n        setLeavesData(data);\n      } catch (error) {\n        console.error('Error fetching leaves data:', error);\n      }\n    };\n    fetchLeavesData();\n  }, []);\n  useEffect(() => {\n    const geocodeLocation = async location => {\n      const url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(location)}.json?access_token=${mapboxgl.accessToken}`;\n      for (let attempt = 1; attempt <= 3; attempt++) {\n        try {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const result = await response.json();\n          if (result.features.length > 0) {\n            const {\n              center\n            } = result.features[0];\n            return {\n              lat: center[1],\n              lon: center[0]\n            };\n          }\n          break;\n        } catch (error) {\n          console.error(`Error geocoding ${location} (attempt ${attempt}):`, error);\n          if (attempt === 3) {\n            return null;\n          }\n        }\n      }\n    };\n    const geocodeLocations = async () => {\n      const geocodedData = await Promise.all(leavesData.map(async item => {\n        const geocodeResult = await geocodeLocation(item.location);\n        if (geocodeResult) {\n          return {\n            ...item,\n            lat: geocodeResult.lat,\n            lon: geocodeResult.lon\n          };\n        }\n        return null;\n      }));\n      setGeoData(geocodedData.filter(item => item !== null));\n    };\n    if (leavesData.length > 0) {\n      geocodeLocations();\n    }\n  }, [leavesData]);\n  const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultCenter,\n    zoom: 13,\n    style: {\n      height: \"100vh\",\n      width: \"88%\",\n      position: \"absolute\",\n      left: \"13.5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), geoData.map((location, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [location.lat, location.lon],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [location.location, \": \", location.emp_name, \" - \", location.leaves, \" leaves\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s2(Location, \"2jObyz0QFc/9dDpSbULSYHvavi8=\");\n_c2 = Location;\nexport default Location;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchField\");\n$RefreshReg$(_c2, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","L","GeoSearchControl","OpenStreetMapProvider","mapboxgl","jsxDEV","_jsxDEV","accessToken","SearchField","_s","map","provider","searchControl","style","showMarker","retainZoomLevel","animateZoom","autoClose","searchLabel","addControl","removeControl","_c","Location","_s2","leavesData","setLeavesData","geoData","setGeoData","fetchLeavesData","response","fetch","ok","Error","status","data","json","console","log","error","geocodeLocation","location","url","encodeURIComponent","attempt","result","features","length","center","lat","lon","geocodeLocations","geocodedData","Promise","all","item","geocodeResult","filter","defaultCenter","zoom","height","width","position","left","children","attribution","fileName","_jsxFileName","lineNumber","columnNumber","idx","emp_name","leaves","_c2","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/Location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport * as L from 'leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport mapboxgl from 'mapbox-gl';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-geosearch/dist/geosearch.css';\nimport './Location.css';\n\nmapboxgl.accessToken = 'YOUR_MAPBOX_API_KEY'; // Add your Mapbox API key here\n\nconst SearchField = () => {\n    const map = useMap();\n\n    useEffect(() => {\n        const provider = new OpenStreetMapProvider();\n\n        const searchControl = new GeoSearchControl({\n            provider,\n            style: 'bar',\n            showMarker: true,\n            retainZoomLevel: false,\n            animateZoom: true,\n            autoClose: true,\n            searchLabel: 'Enter address'\n        });\n\n        map.addControl(searchControl);\n        return () => map.removeControl(searchControl);\n    }, [map]);\n\n    return null;\n};\n\nconst Location = () => {\n    const [leavesData, setLeavesData] = useState([]);\n    const [geoData, setGeoData] = useState([]);\n\n    useEffect(() => {\n        const fetchLeavesData = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/data');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                console.log('Fetched data:', data);\n                setLeavesData(data);\n            } catch (error) {\n                console.error('Error fetching leaves data:', error);\n            }\n        };\n\n        fetchLeavesData();\n    }, []);\n\n    useEffect(() => {\n        const geocodeLocation = async (location) => {\n            const url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(location)}.json?access_token=${mapboxgl.accessToken}`;\n            for (let attempt = 1; attempt <= 3; attempt++) {\n                try {\n                    const response = await fetch(url);\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    const result = await response.json();\n                    if (result.features.length > 0) {\n                        const { center } = result.features[0];\n                        return { lat: center[1], lon: center[0] };\n                    }\n                    break;\n                } catch (error) {\n                    console.error(`Error geocoding ${location} (attempt ${attempt}):`, error);\n                    if (attempt === 3) {\n                        return null;\n                    }\n                }\n            }\n        };\n\n        const geocodeLocations = async () => {\n            const geocodedData = await Promise.all(leavesData.map(async (item) => {\n                const geocodeResult = await geocodeLocation(item.location);\n                if (geocodeResult) {\n                    return {\n                        ...item,\n                        lat: geocodeResult.lat,\n                        lon: geocodeResult.lon\n                    };\n                }\n                return null;\n            }));\n\n            setGeoData(geocodedData.filter(item => item !== null));\n        };\n\n        if (leavesData.length > 0) {\n            geocodeLocations();\n        }\n    }, [leavesData]);\n\n    const defaultCenter = [12.9716, 77.5946]; // Coordinates for Bengaluru\n\n    return (\n        <MapContainer center={defaultCenter} zoom={13} style={{ height: \"100vh\", width: \"88%\", position: \"absolute\", left: \"13.5%\"}}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <SearchField />\n            {geoData.map((location, idx) => (\n                <Marker key={idx} position={[location.lat, location.lon]}>\n                    <Popup>\n                        {location.location}: {location.emp_name} - {location.leaves} leaves\n                    </Popup>\n                </Marker>\n            ))}\n        </MapContainer>\n    );\n};\n\nexport default Location;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}