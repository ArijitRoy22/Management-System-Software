{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/LineChart.js\";\n// LineChart.js\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst convertToHoursAndMinutes = minutes => {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  print(hours);\n  return `${hours} hours ${mins} minutes`;\n};\nconst LineChart = ({\n  data,\n  title,\n  xaxisTitle,\n  yaxisTitle\n}) => {\n  const chartOptions = {\n    chart: {\n      type: 'line'\n    },\n    xaxis: {\n      categories: data.map(item => item.month),\n      title: {\n        text: xaxisTitle\n      }\n    },\n    yaxis: {\n      title: {\n        text: yaxisTitle\n      },\n      labels: {\n        formatter: value => convertToHoursAndMinutes(value)\n      }\n    },\n    title: {\n      text: title\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    markers: {\n      size: 5\n    },\n    series: [{\n      name: title,\n      data: data.map(item => item.value)\n    }],\n    tooltip: {\n      y: {\n        formatter: value => convertToHoursAndMinutes(value)\n      }\n    },\n    colors: ['#00E396', '#FF4560', '#775DD0']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: chartOptions.series,\n      type: \"line\",\n      height: \"350\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","convertToHoursAndMinutes","minutes","hours","Math","floor","mins","print","LineChart","data","title","xaxisTitle","yaxisTitle","chartOptions","chart","type","xaxis","categories","map","item","month","text","yaxis","labels","formatter","value","stroke","curve","dataLabels","enabled","markers","size","series","name","tooltip","y","colors","children","options","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/LineChart.js"],"sourcesContent":["// LineChart.js\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst convertToHoursAndMinutes = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    print(hours)\n    return `${hours} hours ${mins} minutes`;\n};\n\nconst LineChart = ({ data, title, xaxisTitle, yaxisTitle }) => {\n    const chartOptions = {\n        chart: {\n            type: 'line'\n        },\n        xaxis: {\n            categories: data.map(item => item.month),\n            title: {\n                text: xaxisTitle\n            }\n        },\n        yaxis: {\n            title: {\n                text: yaxisTitle\n            },\n            labels: {\n                formatter: (value) => convertToHoursAndMinutes(value)\n            }\n        },\n        title: {\n            text: title\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        markers: {\n            size: 5\n        },\n        series: [\n            {\n                name: title,\n                data: data.map(item => item.value)\n            }\n        ],\n        tooltip: {\n            y: {\n                formatter: (value) => convertToHoursAndMinutes(value)\n            }\n        },\n        colors: ['#00E396', '#FF4560', '#775DD0']\n    };\n\n    return (\n        <div>\n            <Chart options={chartOptions} series={chartOptions.series} type=\"line\" height=\"350\" />\n        </div>\n    );\n};\n\nexport default LineChart;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,wBAAwB,GAAIC,OAAO,IAAK;EAC1C,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;EACtC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;EACzBK,KAAK,CAACJ,KAAK,CAAC;EACZ,OAAO,GAAGA,KAAK,UAAUG,IAAI,UAAU;AAC3C,CAAC;AAED,MAAME,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAC3D,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAE;MACHC,IAAI,EAAE;IACV,CAAC;IACDC,KAAK,EAAE;MACHC,UAAU,EAAER,IAAI,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;MACxCV,KAAK,EAAE;QACHW,IAAI,EAAEV;MACV;IACJ,CAAC;IACDW,KAAK,EAAE;MACHZ,KAAK,EAAE;QACHW,IAAI,EAAET;MACV,CAAC;MACDW,MAAM,EAAE;QACJC,SAAS,EAAGC,KAAK,IAAKxB,wBAAwB,CAACwB,KAAK;MACxD;IACJ,CAAC;IACDf,KAAK,EAAE;MACHW,IAAI,EAAEX;IACV,CAAC;IACDgB,MAAM,EAAE;MACJC,KAAK,EAAE;IACX,CAAC;IACDC,UAAU,EAAE;MACRC,OAAO,EAAE;IACb,CAAC;IACDC,OAAO,EAAE;MACLC,IAAI,EAAE;IACV,CAAC;IACDC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAEvB,KAAK;MACXD,IAAI,EAAEA,IAAI,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACM,KAAK;IACrC,CAAC,CACJ;IACDS,OAAO,EAAE;MACLC,CAAC,EAAE;QACCX,SAAS,EAAGC,KAAK,IAAKxB,wBAAwB,CAACwB,KAAK;MACxD;IACJ,CAAC;IACDW,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;EAC5C,CAAC;EAED,oBACIpC,OAAA;IAAAqC,QAAA,eACIrC,OAAA,CAACF,KAAK;MAACwC,OAAO,EAAEzB,YAAa;MAACmB,MAAM,EAAEnB,YAAY,CAACmB,MAAO;MAACjB,IAAI,EAAC,MAAM;MAACwB,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEd,CAAC;AAACC,EAAA,GAlDIpC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}