{"ast":null,"code":"var _jsxFileName = \"/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/BarChart.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  data,\n  title\n}) => {\n  const categories = data.map(item => item.name);\n  const seriesData = data.map(item => item.value);\n  const dynamicHeight = Math.max(400, data.length * 20); // Adjust height dynamically based on the number of items\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: dynamicHeight\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        // Vertical bar chart\n        columnWidth: '60%',\n        resizable: true\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories,\n      labels: {\n        rotate: -45,\n        // Rotate labels for better readability\n        maxHeight: 100,\n        // Limit label height\n        style: {\n          fontSize: '12px' // Adjust font size\n        },\n        formatter: function (value) {\n          return value.length > 10 ? value.substring(0, 10) + '...' : value; // Truncate long labels\n        }\n      },\n      tooltip: {\n        enabled: false // Disable tooltips on x-axis labels\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontSize: '12px'\n        }\n      },\n      title: {\n        text: 'Number of Employees'\n      }\n    },\n    title: {\n      text: title,\n      align: 'center',\n      style: {\n        fontSize: '18px'\n      }\n    },\n    fill: {\n      colors: ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#66DA26', '#546E7A', '#D4526E', '#8D5B4C', '#F86624']\n    },\n    tooltip: {\n      enabled: true,\n      y: {\n        formatter: function (val, opts) {\n          const fullLabel = categories[opts.dataPointIndex]; // Get the full label from categories\n          return `${fullLabel}: ${val} employees`;\n        }\n      }\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false // Remove grid lines\n        }\n      }\n    }\n  };\n  const series = [{\n    name: title,\n    data: seriesData\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: dynamicHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","BarChart","data","title","categories","map","item","name","seriesData","value","dynamicHeight","Math","max","length","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","resizable","dataLabels","enabled","xaxis","labels","rotate","maxHeight","style","fontSize","formatter","substring","tooltip","yaxis","text","align","fill","colors","y","val","opts","fullLabel","dataPointIndex","grid","lines","show","series","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arijitroy/kafka/Codes/employee-dashboard/dashboard/src/components/BarChart.js"],"sourcesContent":["import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst BarChart = ({ data, title }) => {\n  const categories = data.map(item => item.name);\n  const seriesData = data.map(item => item.value);\n\n  const dynamicHeight = Math.max(400, data.length * 20); // Adjust height dynamically based on the number of items\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: dynamicHeight,\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false, // Vertical bar chart\n        columnWidth: '60%',\n        resizable: true\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    xaxis: {\n      categories,\n      labels: {\n        rotate: -45, // Rotate labels for better readability\n        maxHeight: 100, // Limit label height\n        style: {\n          fontSize: '12px', // Adjust font size\n        },\n        formatter: function(value) {\n          return value.length > 10 ? value.substring(0, 10) + '...' : value; // Truncate long labels\n        },\n      },\n      tooltip: {\n        enabled: false, // Disable tooltips on x-axis labels\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontSize: '12px',\n        },\n      },\n      title: {\n        text: 'Number of Employees',\n      },\n    },\n    title: {\n      text: title,\n      align: 'center',\n      style: {\n        fontSize: '18px',\n      },\n    },\n    fill: {\n      colors: ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#66DA26', '#546E7A', '#D4526E', '#8D5B4C', '#F86624'],\n    },\n    tooltip: {\n      enabled: true,\n      y: {\n        formatter: function(val, opts) {\n          const fullLabel = categories[opts.dataPointIndex]; // Get the full label from categories\n          return `${fullLabel}: ${val} employees`;\n        },\n      },\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false, // Remove grid lines\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      name: title,\n      data: seriesData,\n    },\n  ];\n\n  return (\n    <div className=\"chart\">\n      <ReactApexChart options={options} series={series} type=\"bar\" height={dynamicHeight}/>\n    </div>\n  );\n};\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}